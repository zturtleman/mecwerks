<SCRIPT SRC="http://ads.gamespy.com/jserver/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=PRESTITIAL?257926671"></SCRIPT><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!--INSERTADTHISPAGE -->

<html>
<head>
	<title>Code3Arena</title>
</head>

<body background="../images/bg.gif" bgcolor="#660000" text="white" link="#C05F00" vlink="#d16545">


	<!-- BEGIN BANNER AD TABLE -->
<table width="100%" border=0 cellpadding=5 cellspacing=0 align="center" background="../images/bg.gif">
  <tr>
   	 <td width=468 height=60 align="CENTER" valign="top" bgcolor=#000000>
 <center><SCRIPT SRC="http://ads.gamespy.com/jserver/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=IAB_FULL_BANNER?257926671"></SCRIPT><NOSCRIPT><A HREF="http://ads.gamespy.com/cgi-bin/adclick.exe/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=IAB_FULL_BANNER?257926671"><IMG SRC="http://ads.gamespy.com/cgi-bin/adserver.exe/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=IAB_FULL_BANNER?257926671"></A></NOSCRIPT><!--ACCIPITERADINSERT/site=PQ/AAMSZ=IAB_FULL_BANNER/AREA=ARTICLES--></center>
</td>
  </tr>
</table>
	<!-- END BANNER AD TABLE -->

<br>

	<!-- BEGIN LOGO IMAGE TABLE -->
<table width="100%" cellspacing="0" cellpadding="0" border="1" align="center" bgcolor=#000000>
  <tr>
     <td align="CENTER">
	  <img src="/code3arena/images/logo.gif" width="500" height="137" border="0" alt="Code3Arena">
</td>
  </tr>
</table>
	<!-- END LOGO IMAGE TABLE -->
<p>

	<!-- BEGIN TOP HEIRARCHY -->
<table width="100%" cellpadding=0 cellspacing=0 border=0 bgcolor="#000000">
  <tr>
    <td><img src="/code3arena/images/ouricon.gif"></td>
    <td width="100%" bgcolor=#000000>
	<font face="Verdana, Arial" size="2" color="#eeeeee"><b>
	<A HREF="http://www.planetquake.com">PlanetQuake</A> |
	<A HREF="http://www.planetquake.com/code3arena">Code3Arena</A> |
	<A HREF="http://www.planetquake.com/code3arena/tutorials">Tutorials</A> |
	<a href="tutorial35.shtml"><< Prev</a> |
	Tutorial 36 |
	<a href="tutorial37.shtml">Next >></a>
	</b></font>
    </td>
  </tr>
</table>
<p>
	<!-- END TOP HEIRARCHY -->

	<!-- BEGIN MAIN TABLE HERE-->
<table width="100%" border=0 cellpadding=0 cellspacing=0 align=center bgcolor=#4B0202>
  <tr>
  
   <!-- BEGIN LEFT NAVBAR MENU --> 
    <td valign=top bgcolor="#000000">
<table width=150 bgcolor="#000000" valign=top border=0 cellpadding=10 cellspacing=0 >
  <tr>
	 <td bgcolor=#000000 valign=top>
      <p>
      <a href="/code3arena/index.shtml"><img src="/code3arena/images/minilogo.gif" width="150" height="80" border="0" alt="menu"></a>
	  <p><!-- C40B02 -->
	  <font face=arial color="#C05F00" size=2>
<strong>
<LI> <a href="/code3arena/index.shtml">Home/News</a>
<LI> <a href="/code3arena/modsource.shtml">ModSource</a>
<LI> <a href="/code3arena/compilers.shtml">Compiling</a>
<LI> <a href="/code3arena/help.shtml">Help!!!</a>
<LI> <a href="/code3arena/submission.shtml">Submission</a>
<LI> <a href="/code3arena/contributors.shtml">Contributors</a>
<LI> <a href="/code3arena/staff.shtml">Staff</a>
<LI> <a href="/code3arena/downloads.shtml">Downloads</a>
</strong>
<P>

	    <img src="/code3arena/images/tutorials.gif" width="80" height="25" border="0" alt="Tutorials">
	  <font color="#C05F00" size=1>
<strong>
<BR> <a href="/code3arena/tutorials"> <  Index  ></a>
<BR> 1. <a href="/code3arena/tutorials/tutorial1.shtml">Mod making 101</a>
<BR> 2. <a href="/code3arena/tutorials/tutorial2.shtml">Up 'n running</a>
<BR> 3. <a href="/code3arena/tutorials/tutorial3.shtml">Hello, QWorld!</a>
<BR> 4. <a href="/code3arena/tutorials/tutorial4.shtml">Infinite Haste</a>
<BR> 5. <a href="/code3arena/tutorials/tutorial5.shtml">Armor Piercing Rails</a>
<BR> 6. <a href="/code3arena/tutorials/tutorial6.shtml">Bouncing Rockets</a>
<BR> 7. <a href="/code3arena/tutorials/tutorial7.shtml">Cloaking</a>
<BR> 8. <a href="/code3arena/tutorials/tutorial8.shtml">Ladders</a>
<BR> 9. <a href="/code3arena/tutorials/tutorial9.shtml">Favourite Server</a>
<BR> 10. <a href="/code3arena/tutorials/tutorial10.shtml">Flame Thrower</a>
<BR> 11. <a href="/code3arena/tutorials/tutorial11.shtml">Vortex Grenades</a>
<BR> 12. <a href="/code3arena/tutorials/tutorial12.shtml">Grapple</a>
<BR> 13. <a href="/code3arena/tutorials/tutorial13.shtml">Lightning Discharge</a>
<BR> 14. <a href="/code3arena/tutorials/tutorial14.shtml">Locational Damage</a>
<BR> 15. <a href="/code3arena/tutorials/tutorial15.shtml">Leg Shots</a>
<BR> 16. <a href="/code3arena/tutorials/tutorial16.shtml">Weapon Switching</a>
<BR> 17. <a href="/code3arena/tutorials/tutorial17.shtml">Scoreboard frag-rate</a>
<BR> 18. <a href="/code3arena/tutorials/tutorial18.shtml">Vortex Grenades II</a>
<BR> 19. <a href="/code3arena/tutorials/tutorial19.shtml">Vulnerable Missiles</a>
<BR> 20. <a href="/code3arena/tutorials/tutorial20.shtml">Creating Classes</a>
<BR> 21. <a href="/code3arena/tutorials/tutorial21.shtml">Scrolling Credits</a>
<BR> 22. <a href="/code3arena/tutorials/tutorial22.shtml">Weapon Dropping</a>
<BR> 23. <a href="/code3arena/tutorials/tutorial23.shtml">Anti-Gravity Boots</a>
<BR> 24. <a href="/code3arena/tutorials/tutorial24.shtml">HUD scoreboard</a>
<BR> 25. <a href="/code3arena/tutorials/tutorial25.shtml">Flashlight and laser</a>
<BR> 26. <a href="/code3arena/tutorials/tutorial26.shtml">Weapon Positioning</a>
<BR> 27. <a href="/code3arena/tutorials/tutorial27.shtml">Weapon Reloading</a>
<BR> 28. <a href="/code3arena/tutorials/tutorial28.shtml">Progressive Zooming</a>
<BR> 29. <a href="/code3arena/tutorials/tutorial29.shtml">Rotating Doors</a>
<BR> 30. <a href="/code3arena/tutorials/tutorial30.shtml">Beheading (headshot!)</a>
<BR> 31. <a href="/code3arena/tutorials/tutorial31.shtml">Alt Weapon Fire</a>
<BR> 32. <a href="/code3arena/tutorials/tutorial32.shtml">Popup Menus I</a>
<BR> 33. <a href="/code3arena/tutorials/tutorial33.shtml">Popup Menus II</a>
<BR> 34. <a href="/code3arena/tutorials/tutorial34.shtml">Cluster Grenades</a>
<BR> 35. <a href="/code3arena/tutorials/tutorial35.shtml">Homing Rockets</a>
<BR> 36. <a href="/code3arena/tutorials/tutorial36.shtml">Spreadfire Powerup</a>
<BR> 37. <a href="/code3arena/tutorials/tutorial37.shtml">Instagib gameplay</a>
<BR> 38. <a href="/code3arena/tutorials/tutorial38.shtml">Accelerating rockets</a>
<BR> 39. <a href="/code3arena/tutorials/tutorial39.shtml">Server only Instagib</a>
<BR> 40. <a href="/code3arena/tutorials/tutorial40.shtml">Advanced Grapple Hook</a>
<BR> 41. <a href="/code3arena/tutorials/tutorial41.shtml">Unlagging your mod</a>
</strong>
	  </font>
      <p><br>
	  
	  <img src="/code3arena/images/articles.gif" width="80" height="25" border="0" alt="Articles">
	  <font color="#C05F00" size=1>
<strong>
<BR> <a href="/code3arena/articles"> <  Index  > </a>
<BR> 1. <a href="/code3arena/articles/article1.shtml">Entities</A>
<BR> 2. <a href="/code3arena/articles/article2.shtml">Vectors</A>
<BR> 3. <a href="/code3arena/articles/article3.shtml">Good Coding</A>
<BR> 4. <a href="/code3arena/articles/article4.shtml">Compilers I</A>
<BR> 5. <a href="/code3arena/articles/article5.shtml">Compilers II</A>
<BR> 6. <a href="/code3arena/articles/article6.shtml">UI Menu Primer I</A>
<BR> 7. <a href="/code3arena/articles/article7.shtml">UI Menu Primer II</A>
<BR> 8. <a href="/code3arena/articles/article8.shtml">UI Menu Primer III</A>
<BR> 9. <a href="/code3arena/articles/article9.shtml">QVM Communication, Cvars, commands</A>
<BR> 10. <a href="/code3arena/articles/article10.shtml">Metrowerks CodeWarrior</A>
<BR> 11. <a href="/code3arena/articles/article11.shtml">1.27g code, bugs, batch</A>
</strong>
	  </font>
	  <p>
	  <!-- <hr color="#C0C0C0">  -->
	  <br>

	  <img src="/code3arena/images/links.gif" width="80" height="25" border="0" alt="Links">
	  <font color="#C05F00">
	  <small>
<li><a href="http://www.planetquake.com/quake3/files.shtml">Quake3 Files</a>
<li><a href="http://forums.planetquake.com/">Quake3 Forums</a>
<li><a href="http://dynamic.gamespy.com/~assim2/wwwshow.cgi?board=quake3">Q3A Editing Message Board</a>
<li><a href="http://www.planetquake.com/quake3/hosted/editing.shtml">Quake3 Editing</a>
	  </small>
	  </font>
	  <p><br>
	  
	  <img src="/code3arena/images/feedback.gif" width="80" height="25" border="0" alt="Feedback">
	  <font color="#C05F00">
	  <small>
<li><a href="mailto:sumfuka@planetquake.com">SumFuka</A>
<li><a href="mailto:calrathan@captured.com">Calrathan</A>
<li><a href="mailto:hypothermia@planetquake.com">
	<font color="#FF0000">H</font><font color="#FFFF00">y</font><font
	color="#CC33CC">p</font><font color="#3333FF">o</font>Thermia
	</A>
<li><a href="mailto:warzone@planetquake.com">WarZone</A>
	  </small>
	  </font>
	  <p><br>
	  
	  <img src="/counter/count.exe?ft=3&df=code3arena.dat&dd=D">
	   <p><br><br><br>
	  <small>Site Design by:</small>
	  <br>
	  <a href="mailto:ladyice@planetice.org,jeh@planetjeh.com"><img src="/code3arena/images/icelogo_sm.jpg" width="88" height="31" border="0" align="middle" alt="ICEmosis Design"></a>
	
	  </font>
	  <br><br>
    </td>

  </tr>
</table>
    </td>
	<!-- END LEFT NAVBAR MENU -->
	<!-- BEGIN DIVIDER -->
	<td valign=top background="../images/bg.gif">
<table width=20 cellpadding=0 cellspacing=0 border=0 background="../images/bg.gif">
  <tr>
	<td background="../images/bg.gif">
	  &nbsp;		
	</td>
  </tr>
</table>
	</td>
    <!-- END DIVIDER -->
	
	
	<!-- MAIN TEXT AREA -->
	<td valign=top bgcolor=#000000>
<table width="100%" cellpadding=15 cellspacing=10 border=0 bgcolor=#000000 valign=top>
  <tr>
	<td valign=top> 
<font face="Verdana, Arial" size="2" color="#eeeeee">


<center><b><font color="#C05F00" size=5>
TUTORIAL 36 - Spreadfire powerup
</font></b><br>by <b><a href="mailto:hal9000@gamedesign.net">Hal9000</A></b></center>

<p>This nifty new powerup is just the kind of thing you used to find in those retro arcade 
games. Which is probably just as well its in the <a href="/code3arena/modsource.shtml">Smash mod</a>,
because that's based on... you guessed it... a retro arcade game.

<p>Run around fragging bot opponents for money, using a fixed third person view. Gameplay is very 
simple - yet surprisingly addictive - with a few extra powerups thrown in for good measure. 
Great maps complete this mod and really make it fun to play.


<font color="#E07F44"><H4>
1. Recognizing the powerup
</H4></font>

<p>To kick off we need to add a new power up type, and then define the entity that appears on
maps. As there's already a powerup system in place, we don't really need to do any more
work to get the item started.


<p>Adding the new type to <b>bg_public.h</b>, in the <b>powerup_t</b> enumeration 
(about line 221):

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
PW_REDFLAG,
PW_BLUEFLAG,
<font color="#ff6060">PW_SPREAD,  //Hal9000 spreadfire</font>
PW_BALL,
</pre></font>

<p>&nbsp;

<p>Then the powerup item is added to the list of entities that the client and server
will be aware of. In <b>bg_misc.c</b> in the array <b>bg_itemlist[]</b>:


<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
/*QUAKED team_CTF_blueflag (0 0 1) (-16 -16 -16) (16 16 16)
Only in CTF games
*/
{
	"team_CTF_blueflag",
	"sound/teamplay/flagtk_blu.wav",
	{ 	"models/flags/b_flag.md3",
		0, 0, 0 },
/* icon */	"icons/iconf_blu1",
/* pickup */	"Blue Flag",
		0,
		IT_TEAM,
		PW_BLUEFLAG,
/* precache */ "",
/* sounds */ "sound/teamplay/flagcap_blu.wav sound/teamplay/flagtk_blu.wav sound/teamplay/flagret_blu.wav"
	},

<font color="#ff6060">//Hal9000 spreadfire powerup
/*QUAKED item_spread (.3 .3 1) (-16 -16 -16) (16 16 16) suspended
*/
{
	"item_spread", 
	"sound/items/spread.wav",
	{ 	"models/powerups/threeway/threeway.md3", 
		0, 0, 0 },
/* icon */	"icons/spread",  
/* pickup */	"Spreadfire",
		30,
		IT_POWERUP,
		PW_SPREAD,
/* precache */ "",
/* sounds */ ""
},</font>
// end of list marker
{NULL}
</pre></font>

<p><b>item_spread</b> is a unique name for the item, used to identify
and connect it with the entity placed in the map.
<b>&qout;sound/items/spread.wav&quot;</b> will be played when the item is picked up.
Because it's a powerup, it'll be played globally for all to hear.

<p>The next set of information in the curly brackets is the list of
models used to construct the item. In our case we only have one, 
<b>&quot;models/powerups/threeway/threeway.md3&quot;</b>, but powerups like the quad
have a second model for a counter-rotating ring.

<p>
<center><table width="90%" border="1" cellpadding="8">
<tr><td>
<font face="Verdana, Arial" size="2" color="#eeeeee">
<center>If you want to use the model created for the spreadfire by Hal9000, you'll have
to ask for his permission first.</center>
</td></tr>
</table></center>

<p>The small graphical icon called <b>icons/spread&quot;</b> is drawn on
the splash screen while the level loads, and is also used when the
player has item models turned off. This can (as it does in this case)
also name a shader used to specify how the icon is drawn on screen.

<p>The item info is completed with the name displayed on screen when the item is picked up,
and the identification as a powerup of type <b>PW_SPREAD</b>.


<p>&nbsp;

<font color="#E07F44"><H4>
2. When the powerup is activated...
</H4></font>

<p>...we need to fire the weapon with two extra shots to give us a fan shape.

<p>This is the code from Smash2 that does the job. It only works for weapons
that produce a &quot;bolt&quot;: rocket launcher, grenade, plasma, 
and BFG(!), and direct fire or hit-scan weapons like a railgun can't use this code.

This is the new <b>weapon_grenadelauncher_fire()</b> in <b>g_weapon.c</b>,
with the spreadfire code installed. To use this code in other bolt weapons
you'll need to replace the <b>fire_grenade()</b> call with the equivalent bolt
creation function call. 

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
void weapon_grenadelauncher_fire (gentity_t *ent) {
	gentity_t	*m;
	gclient_t	*client; //Hal9000
<font color="#ff6060">	float		newforward[] = {0,0,0}; //Hal9000
	client = ent->client; //Hal9000</font>

	// extra vertical velocity
	forward[2] += 0.2;
	VectorNormalize( forward );

	m = fire_grenade (ent, muzzle, forward);
	m->damage *= s_quadFactor;
	m->splashDamage *= s_quadFactor;

<font color="#ff6060">	//Hal9000 spreadfire
	if ( client->ps.powerups[PW_SPREAD] ) {
		//First shot, slightly to the right
		AngleVectors( client->ps.viewangles, forward, right, up );
		VectorCopy( forward, newforward );
		if ( forward[0] >= 0.5 && forward[0] <= 1 ) {
			newforward[1] += .35;
		} else if ( forward[0] <= -0.5 && forward[0] >= -1 ) {
			newforward[1] += .35;
		} else {
			newforward[0] += .35;
		}
		VectorNormalize( newforward );
		VectorAdd( newforward, forward, forward );
		CalcMuzzlePoint( ent, forward, right, up, muzzle );

		m = fire_grenade (ent, muzzle, forward);
		m->damage *= s_quadFactor;
		m->splashDamage *= s_quadFactor;

		//Second shot, slightly to the left
		AngleVectors (client->ps.viewangles, forward, right, up);
		VectorCopy( forward, newforward );
		if ( forward[0] >= 0.5 && forward[0] <= 1 ) {
			newforward[1] -= .35;
		} else if ( forward[0] <= -0.5 && forward[0] >= -1 ) {
			newforward[1] -= .35;
		} else {
			newforward[0] -= .35;
		}
		VectorNormalize( newforward );
		VectorAdd( newforward, forward, forward );
		CalcMuzzlePoint ( ent, forward, right, up, muzzle );

		m = fire_grenade (ent, muzzle, forward);
		m->damage *= s_quadFactor;
		m->splashDamage *= s_quadFactor;
	}</font>
//	VectorAdd( m->s.pos.trDelta, ent->client->ps.velocity, 
//		m->s.pos.trDelta );	// "real" physics
}
</pre></font>

<p>What this code does is construct a vector (<b>newforward</b>) that's 
approximately perpendicular to the direction we're facing, and in the horizontal plane.
It then adds it to our forward facing direction, and fires a bolt off. This achieves the
desired effect of a fan shape, though its only an approximate solution.


<p>&nbsp;

<p>Unfortunately there's a small problem. The code assumes that the
spreadfire will only be used in the horizontal plane. This is great and works
well in SmashV2 where you can only fire horizontally. If you want to add
this feature to your mod, and you allow a mouse free-look that changes
pitch, then you'll need to use the code from the next section instead.


<p>&nbsp;


<font color="#E07F44"><H4>
3. When the powerup is activated (part II)
</H4></font>

<p>I'm going to take a slightly different route with this code just to make it
easier to add to any bolt firing weapon. I'll create a generic function that
accepts the bolt firing function as a parameter, so we can re-use it in multiple
places.

<p>This is the new function, place it near the top of <b>g_weapon.c</b>:


<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
<font color="#ff6060">
typedef gentity_t* (*weaponLaunch)(gentity_t*, vec3_t, vec3_t);

/*
===============
SpreadFire_Powerup

HypoThermia: fan bolts at any view pitch
===============
*/
static void SpreadFire_Powerup(gentity_t* ent, weaponLaunch fireFunc)
{
	gentity_t	*m;
	gclient_t	*client;
	vec3_t		newforward;
	vec3_t		angles;

	client = ent->client; 

	//First shot, slightly to the right
	AngleVectors( client->ps.viewangles, forward, right, 0);
	VectorMA(forward, 0.1, right, newforward);
	VectorNormalize(newforward);
	vectoangles(newforward, angles);

	AngleVectors( angles, forward, right, up );
	CalcMuzzlePoint( ent, forward, right, up, muzzle );

	m = fireFunc (ent, muzzle, forward);
	m->damage *= s_quadFactor;
	m->splashDamage *= s_quadFactor;

	//Second shot, slightly to the left
	AngleVectors( client->ps.viewangles, forward, right, 0);
	VectorMA(forward, -0.1, right, newforward);
	VectorNormalize(newforward);
	vectoangles(newforward, angles);

	AngleVectors( angles, forward, right, up );
	CalcMuzzlePoint( ent, forward, right, up, muzzle );

	m = fireFunc(ent, muzzle, forward);
	m->damage *= s_quadFactor;
	m->splashDamage *= s_quadFactor;
}
</font>
</pre></font>

<p>It looks pretty similar to the one used in Smash, but uses a feature of <b>AngleVectors</b>
to recover a useful vector. 

<p>The <b>client->ps.viewangles</b> contains the YAW (rotate left-right), PITCH
(lean forward/back), and ROLL (rotate left/right) data for the view.
When used, <b>AngleVectors()</b> returns vectors that, given our
orientation in space, will move us forward, to the right edge of the
screen, and up to the top of the screen. 

<p>The important thing to understand is that these vectors give us
movement directions in the <em>absolute</em> world that have
&quot;left-right&quot; and &quot;up-down&quot; meaning in our <em>view</em>
of the world.

<p>How does this relate to the spreadfire? Well each extra shot goes
&quot;to the right&quot; and &quot;to the left&quot; in our view of the
world. So we mix some of the <b>right</b> vector into the view forward
direction using <b>VectorMA()</b> and then reconvert back to the new
(YAW, PITCH, ROLL) angles in preparation for calulating the muzzle
point.

<p>Its a long winded way of saying that the spread of bolts is
independent of the direction you fire them in!


<p>&nbsp;

<p>Finally you have to enable the spreadfire for each of the bolt weapons, this is 
the modified grenade launcher code:


<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
void weapon_grenadelauncher_fire (gentity_t *ent) {
	gentity_t	*m;

	// extra vertical velocity
	forward[2] += 0.2;
	VectorNormalize( forward );

	m = fire_grenade (ent, muzzle, forward);
	m->damage *= s_quadFactor;
	m->splashDamage *= s_quadFactor;

<font color="#ff6060">	if ( client->ps.powerups[PW_SPREAD] )
		SpreadFire_Powerup(ent, fire_grenade);</font>

//	VectorAdd( m->s.pos.trDelta, ent->client->ps.velocity, 
//		m->s.pos.trDelta );	// "real" physics
}
</pre></font>

<p>&nbsp;


<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
<font color="#ff6060">
</font>
</pre></font>



<p>&nbsp;


<font color="#E07F44"><H4>
4. Finishing up
</H4></font>

<p>Well that's all you need to do for bolt weapons. Because of the
similarity of "fire and forget" for each of these weapons, the code
change is much more straightforward. If you want to extend other weapon
types then you're going to have to look at each one individually, and
extend the "hit-scan" detection code. This is more
&quot;repetitive&quot; than difficult, just make sure that you keep the
weapon spread independent of the angle of view.

<p>Take a look at the rest of the SmashV2 source code in the 
<a href="/code3arena/modsource.shtml">ModSource</a> section. This mod
balances code changes with new maps, showing that a fun mod isn't just
driven by code alone.


      <p>              
    </td>			  
  </tr>
</table>
	<!-- END MAIN TABLE -->
				                
  </tr>
</table>
<p>

	<!-- BEGIN BOTTOM HEIRARCHY -->
<table width="100%" cellpadding=0 cellspacing=0 border=0 bgcolor="#000000">
  <tr>
    <td><img src="/code3arena/images/ouricon.gif"></td>
    <td width="100%" bgcolor=#000000>
	<font face="Verdana, Arial" size="2" color="#eeeeee"><b>
	<A HREF="http://www.planetquake.com">PlanetQuake</A> |
	<A HREF="http://www.planetquake.com/code3arena">Code3Arena</A> |
	<A HREF="http://www.planetquake.com/code3arena/tutorials">Tutorials</A> |
	<a href="tutorial35.shtml"><< Prev</a> |
	Tutorial 36 |
	<a href="tutorial37.shtml">Next >></a>
	</b></font>
    </td>
  </tr>
</table>
<p>
	<!-- END BOTOTM HEIRARCHY -->

</body>
</html>
