<SCRIPT SRC="http://ads.gamespy.com/jserver/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=PRESTITIAL?257850750"></SCRIPT><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!--INSERTADTHISPAGE -->

<html>
<head>
	<title>Code3Arena</title>
</head>

<body background="../images/bg.gif" bgcolor="#660000" text="white" link="#C05F00" vlink="#d16545">


	<!-- BEGIN BANNER AD TABLE -->
<table width="100%" border=0 cellpadding=5 cellspacing=0 align="center" background="../images/bg.gif">
  <tr>
   	 <td width=468 height=60 align="CENTER" valign="top" bgcolor=#000000>
 <center><SCRIPT SRC="http://ads.gamespy.com/jserver/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=IAB_FULL_BANNER?257850750"></SCRIPT><NOSCRIPT><A HREF="http://ads.gamespy.com/cgi-bin/adclick.exe/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=IAB_FULL_BANNER?257850750"><IMG SRC="http://ads.gamespy.com/cgi-bin/adserver.exe/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=IAB_FULL_BANNER?257850750"></A></NOSCRIPT><!--ACCIPITERADINSERT/site=PQ/AAMSZ=IAB_FULL_BANNER/AREA=ARTICLES--></center>
</td>
  </tr>
</table>
	<!-- END BANNER AD TABLE -->

<br>

	<!-- BEGIN LOGO IMAGE TABLE -->
<table width="100%" cellspacing="0" cellpadding="0" border="1" align="center" bgcolor=#000000>
  <tr>
     <td align="CENTER">
	  <img src="/code3arena/images/logo.gif" width="500" height="137" border="0" alt="Code3Arena">
</td>
  </tr>
</table>
	<!-- END LOGO IMAGE TABLE -->
<p>

	<!-- BEGIN TOP HEIRARCHY -->
<table width="100%" cellpadding=0 cellspacing=0 border=0 bgcolor="#000000">
  <tr>
    <td><img src="/code3arena/images/ouricon.gif"></td>
    <td width="100%" bgcolor=#000000>
	<font face="Verdana, Arial" size="2" color="#eeeeee"><b>
	<A HREF="http://www.planetquake.com">PlanetQuake</A> |
	<A HREF="http://www.planetquake.com/code3arena">Code3Arena</A> |
	<A HREF="http://www.planetquake.com/code3arena/tutorials">Tutorials</A> |
	<a href="tutorial17.shtml"><< Prev</a> |
	Tutorial 18 |
	<a href="tutorial19.shtml">Next >></a>
	</b></font>
    </td>
  </tr>
</table>
<p>
	<!-- END TOP HEIRARCHY -->

	<!-- BEGIN MAIN TABLE HERE-->
<table width="100%" border=0 cellpadding=0 cellspacing=0 align=center bgcolor=#4B0202>
  <tr>
  
   <!-- BEGIN LEFT NAVBAR MENU --> 
    <td valign=top bgcolor="#000000">
<table width=150 bgcolor="#000000" valign=top border=0 cellpadding=10 cellspacing=0 >
  <tr>
	 <td bgcolor=#000000 valign=top>
      <p>
      <a href="/code3arena/index.shtml"><img src="/code3arena/images/minilogo.gif" width="150" height="80" border="0" alt="menu"></a>
	  <p><!-- C40B02 -->
	  <font face=arial color="#C05F00" size=2>
<strong>
<LI> <a href="/code3arena/index.shtml">Home/News</a>
<LI> <a href="/code3arena/modsource.shtml">ModSource</a>
<LI> <a href="/code3arena/compilers.shtml">Compiling</a>
<LI> <a href="/code3arena/help.shtml">Help!!!</a>
<LI> <a href="/code3arena/submission.shtml">Submission</a>
<LI> <a href="/code3arena/contributors.shtml">Contributors</a>
<LI> <a href="/code3arena/staff.shtml">Staff</a>
<LI> <a href="/code3arena/downloads.shtml">Downloads</a>
</strong>
<P>

	    <img src="/code3arena/images/tutorials.gif" width="80" height="25" border="0" alt="Tutorials">
	  <font color="#C05F00" size=1>
<strong>
<BR> <a href="/code3arena/tutorials"> <  Index  ></a>
<BR> 1. <a href="/code3arena/tutorials/tutorial1.shtml">Mod making 101</a>
<BR> 2. <a href="/code3arena/tutorials/tutorial2.shtml">Up 'n running</a>
<BR> 3. <a href="/code3arena/tutorials/tutorial3.shtml">Hello, QWorld!</a>
<BR> 4. <a href="/code3arena/tutorials/tutorial4.shtml">Infinite Haste</a>
<BR> 5. <a href="/code3arena/tutorials/tutorial5.shtml">Armor Piercing Rails</a>
<BR> 6. <a href="/code3arena/tutorials/tutorial6.shtml">Bouncing Rockets</a>
<BR> 7. <a href="/code3arena/tutorials/tutorial7.shtml">Cloaking</a>
<BR> 8. <a href="/code3arena/tutorials/tutorial8.shtml">Ladders</a>
<BR> 9. <a href="/code3arena/tutorials/tutorial9.shtml">Favourite Server</a>
<BR> 10. <a href="/code3arena/tutorials/tutorial10.shtml">Flame Thrower</a>
<BR> 11. <a href="/code3arena/tutorials/tutorial11.shtml">Vortex Grenades</a>
<BR> 12. <a href="/code3arena/tutorials/tutorial12.shtml">Grapple</a>
<BR> 13. <a href="/code3arena/tutorials/tutorial13.shtml">Lightning Discharge</a>
<BR> 14. <a href="/code3arena/tutorials/tutorial14.shtml">Locational Damage</a>
<BR> 15. <a href="/code3arena/tutorials/tutorial15.shtml">Leg Shots</a>
<BR> 16. <a href="/code3arena/tutorials/tutorial16.shtml">Weapon Switching</a>
<BR> 17. <a href="/code3arena/tutorials/tutorial17.shtml">Scoreboard frag-rate</a>
<BR> 18. <a href="/code3arena/tutorials/tutorial18.shtml">Vortex Grenades II</a>
<BR> 19. <a href="/code3arena/tutorials/tutorial19.shtml">Vulnerable Missiles</a>
<BR> 20. <a href="/code3arena/tutorials/tutorial20.shtml">Creating Classes</a>
<BR> 21. <a href="/code3arena/tutorials/tutorial21.shtml">Scrolling Credits</a>
<BR> 22. <a href="/code3arena/tutorials/tutorial22.shtml">Weapon Dropping</a>
<BR> 23. <a href="/code3arena/tutorials/tutorial23.shtml">Anti-Gravity Boots</a>
<BR> 24. <a href="/code3arena/tutorials/tutorial24.shtml">HUD scoreboard</a>
<BR> 25. <a href="/code3arena/tutorials/tutorial25.shtml">Flashlight and laser</a>
<BR> 26. <a href="/code3arena/tutorials/tutorial26.shtml">Weapon Positioning</a>
<BR> 27. <a href="/code3arena/tutorials/tutorial27.shtml">Weapon Reloading</a>
<BR> 28. <a href="/code3arena/tutorials/tutorial28.shtml">Progressive Zooming</a>
<BR> 29. <a href="/code3arena/tutorials/tutorial29.shtml">Rotating Doors</a>
<BR> 30. <a href="/code3arena/tutorials/tutorial30.shtml">Beheading (headshot!)</a>
<BR> 31. <a href="/code3arena/tutorials/tutorial31.shtml">Alt Weapon Fire</a>
<BR> 32. <a href="/code3arena/tutorials/tutorial32.shtml">Popup Menus I</a>
<BR> 33. <a href="/code3arena/tutorials/tutorial33.shtml">Popup Menus II</a>
<BR> 34. <a href="/code3arena/tutorials/tutorial34.shtml">Cluster Grenades</a>
<BR> 35. <a href="/code3arena/tutorials/tutorial35.shtml">Homing Rockets</a>
<BR> 36. <a href="/code3arena/tutorials/tutorial36.shtml">Spreadfire Powerup</a>
<BR> 37. <a href="/code3arena/tutorials/tutorial37.shtml">Instagib gameplay</a>
<BR> 38. <a href="/code3arena/tutorials/tutorial38.shtml">Accelerating rockets</a>
<BR> 39. <a href="/code3arena/tutorials/tutorial39.shtml">Server only Instagib</a>
<BR> 40. <a href="/code3arena/tutorials/tutorial40.shtml">Advanced Grapple Hook</a>
<BR> 41. <a href="/code3arena/tutorials/tutorial41.shtml">Unlagging your mod</a>
</strong>
	  </font>
      <p><br>
	  
	  <img src="/code3arena/images/articles.gif" width="80" height="25" border="0" alt="Articles">
	  <font color="#C05F00" size=1>
<strong>
<BR> <a href="/code3arena/articles"> <  Index  > </a>
<BR> 1. <a href="/code3arena/articles/article1.shtml">Entities</A>
<BR> 2. <a href="/code3arena/articles/article2.shtml">Vectors</A>
<BR> 3. <a href="/code3arena/articles/article3.shtml">Good Coding</A>
<BR> 4. <a href="/code3arena/articles/article4.shtml">Compilers I</A>
<BR> 5. <a href="/code3arena/articles/article5.shtml">Compilers II</A>
<BR> 6. <a href="/code3arena/articles/article6.shtml">UI Menu Primer I</A>
<BR> 7. <a href="/code3arena/articles/article7.shtml">UI Menu Primer II</A>
<BR> 8. <a href="/code3arena/articles/article8.shtml">UI Menu Primer III</A>
<BR> 9. <a href="/code3arena/articles/article9.shtml">QVM Communication, Cvars, commands</A>
<BR> 10. <a href="/code3arena/articles/article10.shtml">Metrowerks CodeWarrior</A>
<BR> 11. <a href="/code3arena/articles/article11.shtml">1.27g code, bugs, batch</A>
</strong>
	  </font>
	  <p>
	  <!-- <hr color="#C0C0C0">  -->
	  <br>

	  <img src="/code3arena/images/links.gif" width="80" height="25" border="0" alt="Links">
	  <font color="#C05F00">
	  <small>
<li><a href="http://www.planetquake.com/quake3/files.shtml">Quake3 Files</a>
<li><a href="http://forums.planetquake.com/">Quake3 Forums</a>
<li><a href="http://dynamic.gamespy.com/~assim2/wwwshow.cgi?board=quake3">Q3A Editing Message Board</a>
<li><a href="http://www.planetquake.com/quake3/hosted/editing.shtml">Quake3 Editing</a>
	  </small>
	  </font>
	  <p><br>
	  
	  <img src="/code3arena/images/feedback.gif" width="80" height="25" border="0" alt="Feedback">
	  <font color="#C05F00">
	  <small>
<li><a href="mailto:sumfuka@planetquake.com">SumFuka</A>
<li><a href="mailto:calrathan@captured.com">Calrathan</A>
<li><a href="mailto:hypothermia@planetquake.com">
	<font color="#FF0000">H</font><font color="#FFFF00">y</font><font
	color="#CC33CC">p</font><font color="#3333FF">o</font>Thermia
	</A>
<li><a href="mailto:warzone@planetquake.com">WarZone</A>
	  </small>
	  </font>
	  <p><br>
	  
	  <img src="/counter/count.exe?ft=3&df=code3arena.dat&dd=D">
	   <p><br><br><br>
	  <small>Site Design by:</small>
	  <br>
	  <a href="mailto:ladyice@planetice.org,jeh@planetjeh.com"><img src="/code3arena/images/icelogo_sm.jpg" width="88" height="31" border="0" align="middle" alt="ICEmosis Design"></a>
	
	  </font>
	  <br><br>
    </td>

  </tr>
</table>
    </td>
	<!-- END LEFT NAVBAR MENU -->
	<!-- BEGIN DIVIDER -->
	<td valign=top background="../images/bg.gif">
<table width=20 cellpadding=0 cellspacing=0 border=0 background="../images/bg.gif">
  <tr>
	<td background="../images/bg.gif">
	  &nbsp;		
	</td>
  </tr>
</table>
	</td>
    <!-- END DIVIDER -->
	
	
	<!-- MAIN TEXT AREA -->
	<td valign=top bgcolor=#000000>
<table width="100%" cellpadding=15 cellspacing=10 border=0 bgcolor=#000000 valign=top>
  <tr>
	<td valign=top> 
<font face="Verdana, Arial" size="2" color="#eeeeee">

<center>

<b><font color="#C05F00" size="5">TUTORIAL 18 - Vortex Grenades II</font></b></br>
by <a href="mailto:andross@wsu.edu">TeknoDragon</a></center>



<p>This is a follow-up to AssKicka's <a href="/code3arena/tutorials/tutorial11.shtml">Vortex Grenades Tutorial</a>, that beautifies the grenade's effects and may speed

up the algorithm in high load situations with a lot of players tossing

grenades. This tutorial assumes that you have just stepped out of the <a href="/code3arena/tutorials/tutorial11.shtml">Vortex

Grenades Tutorial</a>, so if you haven't done that get over <a href="/code3arena/tutorials/tutorial11.shtml">there</a>!

<p>I'll

also go over a few things that make good development practice, they are

a composite of personal experience and hours in a few Comp. Sci. classes

at <a href="http://www.eecs.wsu.edu/">WSU</a>.

<br>&nbsp;

<h4>

<b><font color="#E07F44">1. Simple

Tweaks</font></b></h4>

Now that

you have vortex grenades there are a few issues to consider if you want

to optimize this mod. First you can change the <b>nextthink</b> of the

grenades so that they aren't calling <b>G_Suck</b> 50 times a second, instead

maybe 10 or 20.

<p>Go to

the <b>G_Suck</b> function in <b>g_missile.c</b> and scroll down to this

line:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
self->nextthink = level.time + 20;
</pre></font>

You can

change the 20 to something larger (say 100 -- that's 10 times per second)

to make <b>G_Suck</b> suck up less process. This doesn't change the rate

that players are sucked towards the grenade because <b>G_Suck</b> doesn't

add the grenade's velocity to yours, it replaces it.

<p>Looking

at how vortex grenades move the player (through modifying <b>target->client->ps.velocity</b>),

you can find what else modifies the player motion and what it does to beautify

the movement. If you use MS Visual Studio to search though the source files

you'll find <b>client->ps.velocity</b> in several functions, including

<b>G_Damage</b>

in <b>g_combat.c</b> seen here:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>

VectorAdd (targ->client->ps.velocity, kvel, targ->client->ps.velocity);

// set the timer so that the other client can't cancel
// out the movement immediately

if ( !targ->client->ps.pm_time ) {
	int		t;
	t = knockback * 2;
	if ( t < 50 ) {
		t = 50;
	}

	if ( t > 200 ) {
		t = 200;
	}

	targ->client->ps.pm_time = t;
	targ->client->ps.pm_flags |= PMF_TIME_KNOCKBACK;
}
</pre></font>

You'll notice

that immediately after the kick velocity is added to the client a special

timer is set so that the movement isn't immediately negated. We'll add

something like this into our <b>G_Suck</b> function to beautify the effect

that 2 grenades have on each other. In the original Vortex Grenades tutorial

says that <b>VectorScale</b> <i>adds</i> the scaled vector to the result,

but if you look at the code of <b>_VectorScale</b> (the unoptomized version

of the <b>VectorScale</b> <b>#define</b> macro -- both in <b>g_math.c</b>)

you'll see that it doesn't! We can change this so that it does add the

velocity, but in affect that means that we're <i>accelerating</i> towards

the grenade! This feels more natural to a player since acceleration is

a natural affect of forces and it will jerk them around less.

<p>First

we need to add a new variable: <b>vec3_t kvel</b>, since dir is reused

at the end of the function we shouldn't mess with it. We should also make

a few <b>#define</b>s so that we can change the <b>G_Suck</b> effects more

easily.

<p>At the

beginning of <b>G_Suck</b> change this:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
vec3_t start,dir,end<font color="#FF6060">,kvel</font>;
</pre></font>

Then add

this <i>before</i> <b>G_Suck</b>:

<font face="Verdana, Arial" size="3" color="#ff6060"><pre>
#define GSUCK_TIMING	50			// the think time interval of G_Suck
#define GSUCK_VELOCITY	200			// the amount of kick each second gets
</pre></font>

Now you

can change <b>GSUCK_TIMING</b> to affect the times per second that <b>G_Suck</b>

pulls a player back. Finally to correct this little bug and add in the

kick timer let's change the <b>G_Suck</b> code:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
// scale directional vector by <font color="#FF6060">the kick factor</font> and add to the targets velocity
VectorScale(dir,<font color="#FF6060">GSUCK_VELOCITY / GSUCK_TIMING, kvel</font>);

<font color="#FF6060">// add the kick velocity to the player's velocity
VectorAdd (target->client->ps.velocity,kvel, target->client->ps.velocity);

// set the timer so that the other client can't cancel
// out the movement immediately
if ( !target->client->ps.pm_time ) {
	targ->client->ps.pm_time = GSUCK_TIMING - 1;

	/* the next G_Suck that works here will
	probably be the one that worked before */

	targ->client->ps.pm_flags |= PMF_TIME_KNOCKBACK;
}</font>
</pre></font>

Now compile

and play around with it a bit, you'll notice a few changes.

<br>&nbsp;

<font color="#E07F44"><H4>

2. Fine Tuning It</h4></font>

The grenades

might not seem so effective, so turn up the <b>GSUCK_VELOCITY</b>. I found

that <b>2000</b> is just enough so that if there's only one grenade there

you can still get away, but 2 will almost certainly kill you (remember

they really add forces now).

<p>The <b>GSUCK_TIMING</b>

value is pretty important to balancing how good it looks vs. how much process

it uses. If <b>GSUCK_VELOCITY</b> is very large and <b>GSUCK_TIMING</b>

is very small players will be tossed back and forth across the grenade,

so be careful with this extreme.<b></b>

<p>Next,

you might even up the stakes and comment out these lines:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>

<font color="#FF6060">//</font>	if (target == self->parent)
<font color="#FF6060">//</font>		continue;</pre></font>

Now you

are affected too and can better tune the grenade's strength!

<p>We see

the <b>VectorCopy</b> call at the end of the function, but we don't see

it in the <b>G_Damage</b> function, that's strange. I suppose you <i>could</i>

comment out this last thing and then remove <b>kvel</b> from the beginning

saving you about 12 bytes on <b>G_Suck</b>'s stack, but that's not too

bad in the great big scheme of things (and no, it doesn't unequivocally

add up to be a per grenade penalty... only per <b>G_Suck</b> simultaneous

calls, which don't happen that much unless you have a <i>lot</i> of grenades

out there).

<br>&nbsp;

<font color="#E07F44"><H4>
3. The Big Fix</h4></font>

There is

one big optimization that can be done. If you poke around in many of the

core functions of the code you'll see stuff from <b>syscalls.c</b> a lot,

particularly <b>trap_Trace</b>. This function serves to calculate impacts.

There is another function that can serve us well: <b>trap_EntitiesInBox</b>.

This function takes two vectors that define a bounding box and returns

a list of entity numbers that are inside this region! We'll take the function

<b>G_KillBox</b> as our example.

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
void G_KillBox (gentity_t *ent) {
	int			i, num;
	int			touch[MAX_GENTITIES];
	gentity_t	*hit;
	vec3_t		mins, maxs;

	VectorAdd( ent->client->ps.origin, ent->r.mins, mins );
	VectorAdd( ent->client->ps.origin, ent->r.maxs, maxs );
	num = trap_EntitiesInBox( mins, maxs, touch, MAX_GENTITIES );

	for (i=0 ; i<num ; i++) {
		hit = &g_entities[touch[i]];
		if ( !hit->client ) {
			continue;
		}

		// nail it
		G_Damage ( hit, ent, ent, NULL, NULL,
			100000, DAMAGE_NO_PROTECTION, MOD_TELEFRAG);
	}
}
</pre></font>

100k damage,

Ouch! You see the exact behavior or <b>trap_EntitiesInBox</b> here, so

although there is little to no documentation on the syscalls you can still

use them just like id does!

<p>However

we've got a circle, not a box! So we fudge the radius a bit and then double

check to make sure everyone's inside. First we need some kind of a list

like <b>touch[MAX_GENTITIES]</b> and a number. Add this line at the beginning

of <b>G_Suck</b>:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
vec3_t start,dir,end,kvel<font color="#FF6060">,mins,maxs</font>;
<font color="#FF6060">int targNum[MAX_GENTITIES],num;</font>
</pre></font>

Next add

this define near the others:

<font face="Verdana, Arial" size="3" color="#ff6060"><pre>
#define GSUCK_RADIUS 500
</pre></font>

Now take

out this line:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
while ((target = findradius(target, self->r.currentOrigin, 500)) != NULL) {
</pre></font>

In it's

place, put this:

<font face="Verdana, Arial" size="3" color="#ff6060"><pre>
mins[0] = -GSUCK_RADIUS * 1.42;
mins[1] = -GSUCK_RADIUS * 1.42;
mins[2] = -GSUCK_RADIUS * 1.42;
maxs[0] = GSUCK_RADIUS * 1.42;
maxs[1] = GSUCK_RADIUS * 1.42;
maxs[2] = GSUCK_RADIUS * 1.42;

VectorAdd( self->r.currentOrigin, mins, mins );
VectorAdd( self->r.currentOrigin, maxs, maxs );

num = trap_EntitiesInBox(mins,maxs,targNum,MAX_GENTITIES);
for(num--; num > 0; num--) {&nbsp;&nbsp;&nbsp; // count from num-1 down to 0
	target = &amp;g_entities[targNum[num]];
</pre></font>

Finally

add these 3 lines:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
// target must be able to take damage
if (!target->takedamage)&nbsp;
	continue;

<font color="#FF6060">// target must actually be in GSUCK_RADIUS
if ( Distance(self->r.currentOrigin,targ->r.currentOrigin) > GSUCK_RADIUS )
	continue;</font>
</pre></font>

We multiply

<b>GSUCK_RADIUS</b> by <b>1.42</b> because it describes the far corner,

not just the closest edge of the square. Since distance is <b>= sqrt( height^2

+ width^2 )</b> the distance between a unit square's corners as well as

the ratio of its width to its diagonal distance is <b>sqrt( 2 )</b> or

about <b>1.42</b>!

<p>Compile

away! If you have less than the minimal requirements for Quake 3 then you

will probably see some performance increase when there are a lot of people

and a lot of vortex grenades.
<br>&nbsp;

<font color="#E07F44"><H4>
4. A Nasty Surprize!</h4></font>

<p>One last

thing that we can do is do another <b>trap_EntitiesInBox</b> to see if

someone is right over the top of our grenade and then explode it on them!

We'll reuse <b>targNum</b> and make another define:

<font face="Verdana, Arial" size="3" color="#ff6060"><pre>
#define GSUCK_TRIGGER	32
</pre></font>

At the very

end of the function add these lines:

<font face="Verdana, Arial" size="3" color="#ff6060"><pre>
mins[0] = -GSUCK_TRIGGER * 1.42;
mins[1] = -GSUCK_TRIGGER * 1.42;
mins[2] = -GSUCK_TRIGGER * 1.42;
maxs[0] = GSUCK_TRIGGER * 1.42;
maxs[1] = GSUCK_TRIGGER * 1.42;
maxs[2] = GSUCK_TRIGGER * 1.42;

VectorAdd( self->r.currentOrigin, mins, mins );
VectorAdd( self->r.currentOrigin, maxs, maxs );

num = trap_EntitiesInBox(mins,maxs,targNum,MAX_GENTITIES);
for(num--; num > 0; num--) {&nbsp;&nbsp;&nbsp; // count from num-1 down to 0
	target = &amp;g_entities[targNum[num]];

	// target must be a client
	if (!target->client)&nbsp;
		continue;

	// target must not be the player who fired the vortex grenade&nbsp;
	if (target == self->parent)		// makes sense here
		continue;

	// target must be able to take damage
	if (!target->takedamage)
		continue;

	G_ExplodeMissile( self)			// EXPLODE goes the weasel!
}
</pre></font>

I don't

check the radius again here since it's so small, but you certainly can!

However, it involves some heavy multiplication that's not necessarily optimized.

<p>Now that

we've done the same thing twice you could take the code that seems repeated

and put it in another function. This will reduce average memory usage since

you can reduce the time large variables like targNum are in memory. I'll

leave the implementation up to you.

<p>One final

thing to consider: <b>MAX_GENTITIES</b> is <b>1&lt;&lt;10</b>, i.e. <b>1024</b>,

that's <b>4k</b> on the stack each time though the function. I changed

mine to <b>64</b> instead, which is only <b>256</b>. The tradeoff

here is that if you get more than <b>64</b> entities (including rockets,

players, plasma, and just about everything that moves) within <b>GSUCK_RADIUS</b>

some of them will be tagged for suckage and the younger entities probably

won't AFAIK (entity management is a bit of a mystery to me yet).
<br>&nbsp;

<font color="#E07F44"><H4>

5. Testing and Balancing</h4></font>

<p>The absolutely

best way to test and balance your mod is to get together with some Quake

3 fans on a LAN and get everyone's opinions on your work. These opinions

are in fact more valuable than your own in the development process, because

they hopefully represent the kinds of people that will spend time playing

your mod.

<p>You can

go back and change the four <b>#define</b>s: <b>GSUCK_TIMING</b>, <b>GSUCK_VELOCITY</b>,

<b>GSUCK_RADIUS</b>, and <b>GSUCK_TRIGGER</b> to tune up your mod in-between

games when you're testing it. You'll also want to add another <b>#define</b>

to easily change grenade damage. Add this line with your other <b>#define</b>s:

<font face="Verdana, Arial" size="3" color="#ff6060"><pre>
#define GRENADE_DAMAGE	100		// bolt->damage for grenade
#define GRENADE_RADIUS	150		// bolt->splashRadius for grenade
</pre></font>

Next be

sure to replace the appropriate lines in <b>fire_grenade</b>:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
bolt->damage = <font color="#FF6060">GRENADE_DAMAGE</font>;
bolt->splashDamage = <font color="#FF6060">GRENADE_DAMAGE</font>;
bolt->splashRadius = <font color="#FF6060">GRENADE_RADIUS</font>;
</pre></font>

<p>This way

you can have the file open in MS Dev Studio and tweak a few values and compile. Most modern compilers including MS Dev Studio will only recompile the changed files. Next copy the <b>dll</b>'s or <b>qvm</b>'s over your lan and start the next

game in a few seconds.

    </td>			  
  </tr>
</table>
	<!-- END MAIN TABLE -->
				                
  </tr>
</table>
<p>

	<!-- BEGIN BOTTOM HEIRARCHY -->
<table width="100%" cellpadding=0 cellspacing=0 border=0 bgcolor="#000000">
  <tr>
    <td><img src="/code3arena/images/ouricon.gif"></td>
    <td width="100%" bgcolor=#000000>
	<font face="Verdana, Arial" size="2" color="#eeeeee"><b>
	<A HREF="http://www.planetquake.com">PlanetQuake</A> |
	<A HREF="http://www.planetquake.com/code3arena">Code3Arena</A> |
	<A HREF="http://www.planetquake.com/code3arena/tutorials">Tutorials</A> |
	<a href="tutorial17.shtml"><< Prev</a> |
	Tutorial 18 |
	<a href="tutorial19.shtml">Next >></a>
	</b></font>
    </td>
  </tr>
</table>
<p>
	<!-- END BOTTOM HEIRARCHY -->

</body>
</html>
 
