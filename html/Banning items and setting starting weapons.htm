<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0055)http://quakestyle.telefragged.com/quake3/tutorial21.htm -->
<HTML><HEAD><TITLE>Quake Style - Quake 3 Tutorials - New Game Styles - Banning items and setting starting weapons</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<STYLE type=text/css>BODY {
	FONT-FAMILY: verdana
}
TABLE {
	FONT-FAMILY: verdana
}
TR {
	FONT-FAMILY: verdana
}
TD {
	FONT-FAMILY: verdana
}
INPUT {
	FONT-FAMILY: verdana; FONT-SIZE: 10px
}
TEXTAREA {
	FONT-FAMILY: verdana; FONT-SIZE: 10px
}
SELECT {
	FONT-FAMILY: verdana; FONT-SIZE: 10px
}
OPTION {
	FONT-FAMILY: verdana; FONT-SIZE: 10px
}
PRE {
	FONT-FAMILY: verdana; FONT-WEIGHT: bold
}
A {
	COLOR: #00ff00
}
A:hover {
	COLOR: white; TEXT-DECORATION: none
}
</STYLE>

<META content="MSHTML 5.00.2314.1000" name=GENERATOR></HEAD>
<BODY bgColor=black text=#ffff80><FONT size=1>
<DIV align=right>
<TABLE border=0 cellSpacing=0 cellborder="0">
  <TBODY>
  <TR>
    <TD align=middle><FONT size=1><B><FONT color=white>Quake Style - Quake 3 
      Tutorials</FONT><BR><FONT color=#bbcc77>New Game Styles </FONT><FONT 
      color=#ff8000>- Banning items and setting starting weapons</FONT><BR>I 
      think the title sums it up! </B></FONT></TD></TR></TBODY></TABLE></DIV><BR><!-- START TUTORIAL -->This is 
code for banning weapons, ammo, etc, and also starting weapon code, straight 
from my beta of MatchMod 2000. <BR><BR>Feel free to alter it or whatever you 
need to do, so that you can use it - it covers adding cvars and adding a 
"dmflags type setup". <BR><BR>Here goes ... <BR><BR>Cvars.. gotta love em :) 
<BR>In game\g_local.h add this to bottom of the vmCvars_t 's: <BR><PRE><FONT size=1><FONT color=#00ffff>
// banned weapons/items/ammo/runes
extern vmCvar_t	weapflags;
extern vmCvar_t	banned_items;
extern vmCvar_t	ammoflags;
extern vmCvar_t	runeflags;
// starting weapons
extern vmCvar_t	start_weapons;
</FONT>
</FONT></PRE><BR>in game\g_main.c add this to the list of the vmCvar_t 's: <BR><PRE><FONT size=1><FONT color=#00ffff>
// banned weapons/items/ammo/runes
vmCvar_t	weapflags;
vmCvar_t	banned_items;
vmCvar_t	ammoflags;
vmCvar_t	runeflags;
// starting weapons
vmCvar_t	start_weapons;
</FONT>
</FONT></PRE><BR>Still in game\g_main.c, insert this code in the cvar database: 
(search for the existing <B>yellow code</B> to find this quickly) <BR><PRE><FONT size=1><FONT color=#00ffff>
	// banned weapons/items/ammo/runes
	{ &amp;weapflags, "weapflags", "0", 0, 0, qfalse },
	{ &amp;banned_items, "banned_items", "0", 0, 0, qfalse },
	{ &amp;ammoflags, "ammoflags", "0", 0, 0, qfalse },
	{ &amp;runeflags, "runeflags", "0", 0, 0, qfalse },
	// starting weapons
	{ &amp;start_weapons, "start_weapons", "2", 0, 0, qfalse }, // force start with machinegun!</FONT>
	{ &amp;g_allowVote, "g_allowVote", "1", 0, 0, qfalse }
</FONT></PRE><BR>Now, open up game\g_spawn.c and look in the function qboolean 
G_CallSpawn( gentity_t *ent ). Add these lines straight after the definitions: 
<BR><PRE><FONT size=1><FONT color=#00ffff>
	if (weapflags.integer)
	{
		if ((((int)(weapflags.integer) &amp; 1) &amp;&amp; (Q_stricmp(ent-&gt;classname, "weapon_gauntlet")==0)) ||
		    (((int)(weapflags.integer) &amp; 2) &amp;&amp; (Q_stricmp(ent-&gt;classname, "weapon_shotgun")==0)) ||
		    (((int)(weapflags.integer) &amp; 4) &amp;&amp; (Q_stricmp(ent-&gt;classname, "weapon_grenadelauncher")==0)) ||
		    (((int)(weapflags.integer) &amp; 8) &amp;&amp; (Q_stricmp(ent-&gt;classname, "weapon_rocketlauncher")==0)) ||
		    (((int)(weapflags.integer) &amp; 16) &amp;&amp; (Q_stricmp(ent-&gt;classname, "weapon_lightning")==0)) ||
		    (((int)(weapflags.integer) &amp; 32) &amp;&amp; (Q_stricmp(ent-&gt;classname, "weapon_railgun")==0)) ||
		    (((int)(weapflags.integer) &amp; 64) &amp;&amp; (Q_stricmp(ent-&gt;classname, "weapon_plasmagun")==0)) ||
		    (((int)(weapflags.integer) &amp; 128) &amp;&amp; (Q_stricmp(ent-&gt;classname, "weapon_bfg")==0))) 
			return qfalse;
	}

	if (banned_items.integer)
	{
		if ((((int)(banned_items.integer) &amp; 1) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_armor_shard")==0)) ||
		    (((int)(banned_items.integer) &amp; 2) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_armor_combat")==0)) ||
		    (((int)(banned_items.integer) &amp; 4) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_armor_body")==0)) ||
		    (((int)(banned_items.integer) &amp; 8) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_health_small")==0)) ||
		    (((int)(banned_items.integer) &amp; 16) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_health")==0)) ||
		    (((int)(banned_items.integer) &amp; 32) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_health_large")==0)) ||
		    (((int)(banned_items.integer) &amp; 64) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_health_mega")==0)) ||
		    (((int)(banned_items.integer) &amp; 128) &amp;&amp; (Q_stricmp(ent-&gt;classname, "holdable_teleporter")==0)) ||
		    (((int)(banned_items.integer) &amp; 256) &amp;&amp; (Q_stricmp(ent-&gt;classname, "holdable_medkit")==0)) ||
		    (((int)(banned_items.integer) &amp; 512) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_quad")==0)) ||
		    (((int)(banned_items.integer) &amp; 1024) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_enviro")==0)))
			return qfalse;
	}
 
	if (ammoflags.integer)
	{
		if ((((int)(ammoflags.integer) &amp; 1) &amp;&amp; (Q_stricmp(ent-&gt;classname, "ammo_shells")==0)) ||
		    (((int)(ammoflags.integer) &amp; 2) &amp;&amp; (Q_stricmp(ent-&gt;classname, "ammo_bullets")==0)) ||
		    (((int)(ammoflags.integer) &amp; 4) &amp;&amp; (Q_stricmp(ent-&gt;classname, "ammo_grenades")==0)) ||
		    (((int)(ammoflags.integer) &amp; 8) &amp;&amp; (Q_stricmp(ent-&gt;classname, "ammo_cells")==0)) ||
		    (((int)(ammoflags.integer) &amp; 16) &amp;&amp; (Q_stricmp(ent-&gt;classname, "ammo_lightning")==0)) ||
		    (((int)(ammoflags.integer) &amp; 32) &amp;&amp; (Q_stricmp(ent-&gt;classname, "ammo_rockets")==0)) ||
		    (((int)(ammoflags.integer) &amp; 64) &amp;&amp; (Q_stricmp(ent-&gt;classname, "ammo_bfg")==0)))
			return qfalse;
	}
 
	if (runeflags.integer)
	{
		if ((((int)(runeflags.integer) &amp; 1) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_haste")==0)) ||
		    (((int)(runeflags.integer) &amp; 2) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_invis")==0)) ||
		    (((int)(runeflags.integer) &amp; 4) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_regen")==0)) ||
		    (((int)(runeflags.integer) &amp; 8) &amp;&amp; (Q_stricmp(ent-&gt;classname, "item_flight")==0)))
			return qfalse;
	}
</FONT>
</FONT></PRE><BR>NOTE: You can ban anything you want. Look above, and see each 
number being checked on the integer value of that particular cvar. <BR><BR>EG's: 
<BR>If you wanted to ban both the grenade launcher and the lightening gun, you 
would type "/weapflags 20". <BR>If you wanted to ban quad damage, you would type 
"/banned_items 512". <BR>If you wanted to ban BFG ammo, you would type 
"/ammoflags 64". <BR>If you wanted to ban the haste and flight runes, you would 
type "/runeflags 9". <BR><BR>Hopefully that makes sense. If you see above, you 
can see each flag being checked on each cvar, just add the number it checks to 
your cvar and it should be enabled.Well anyway that might not be too helpful, 
but aslong as you are relatively familiar to the Quake 2 dmflags system, you 
should get it. <BR><BR>Now, to initialize starting weapons. Add this function 
above the ClientSpawn function in game\g_client.c: <BR><PRE><FONT size=1><FONT color=#00ffff>
// Starting Weapons
void CheckStartItems(gentity_t *ent)
{
	gclient_t *client;
	client = ent-&gt;client;
 
	if ((int)(start_weapons.integer) &amp; 1) 
	{
		client-&gt;ps.stats[STAT_WEAPONS] |= ( 1 &lt;&lt; WP_SHOTGUN );
		client-&gt;ps.ammo[WP_SHOTGUN] = 10;
	}

	if ((int)(start_weapons.integer) &amp; 2) 
	{
		client-&gt;ps.stats[STAT_WEAPONS] |= ( 1 &lt;&lt; WP_MACHINEGUN );
		if ( g_gametype.integer == GT_TEAM ) 
			client-&gt;ps.ammo[WP_MACHINEGUN] = 50;
		else 
			client-&gt;ps.ammo[WP_MACHINEGUN] = 100;
	}

	if ((int)(start_weapons.integer) &amp; 4) 
	{
		client-&gt;ps.stats[STAT_WEAPONS] |= ( 1 &lt;&lt; WP_GRENADE_LAUNCHER );
		client-&gt;ps.ammo[WP_GRENADE_LAUNCHER] = 5;
	}

	if ((int)(start_weapons.integer) &amp; 8) 
	{
		client-&gt;ps.stats[STAT_WEAPONS] |= ( 1 &lt;&lt; WP_ROCKET_LAUNCHER );
		client-&gt;ps.ammo[WP_ROCKET_LAUNCHER] = 5; 
	}

	if ((int)(start_weapons.integer) &amp; 16) 
	{
		client-&gt;ps.stats[STAT_WEAPONS] |= ( 1 &lt;&lt; WP_LIGHTNING );
		client-&gt;ps.ammo[WP_LIGHTNING] = 60; 
	}

	if ((int)(start_weapons.integer) &amp; 32) 
	{
		client-&gt;ps.stats[STAT_WEAPONS] |= ( 1 &lt;&lt; WP_RAILGUN );
		client-&gt;ps.ammo[WP_RAILGUN] = 10; 
	}

	if ((int)(start_weapons.integer) &amp; 64) 
	{
		client-&gt;ps.stats[STAT_WEAPONS] |= ( 1 &lt;&lt; WP_PLASMAGUN );
		client-&gt;ps.ammo[WP_PLASMAGUN] = 30; 
	}

	if ((int)(start_weapons.integer) &amp; 128) 
	{
		client-&gt;ps.stats[STAT_WEAPONS] |= ( 1 &lt;&lt; WP_BFG );
		client-&gt;ps.ammo[WP_BFG] = 15; 
	}
}
</FONT>
</FONT></PRE><BR>Now, in ClientSpawn replace: <BR><PRE><FONT size=1><FONT color=#ff00ff>
	client-&gt;ps.stats[STAT_WEAPONS] = ( 1 &lt;&lt; WP_MACHINEGUN );
	if ( g_gametype.integer == GT_TEAM ) {
		client-&gt;ps.ammo[WP_MACHINEGUN] = 50;
	} else {
		client-&gt;ps.ammo[WP_MACHINEGUN] = 100;
	}
</FONT>
</FONT></PRE><BR>With this: <BR><PRE><FONT size=1><FONT color=#00ffff>
	CheckStartItems(ent);
</FONT>
</FONT></PRE><BR>That's it. Hopefully you can understand how the cvar's work 
*grin* <BR>If not, well, have a better look. You can proabably see up the top of 
the code what numbers need to be added to that particular cvar to enable/disable 
certain things. <BR><BR>If you are running a normal server, make sure 
"start_weapons" is set to 2, so everybody will start with the machinegun. 
(everybody will defaultly start with the gauntlet!) 
<!--- END TUTORIAL ---><BR><BR><FONT color=#ff8000><B>-- Credits:</B></FONT> 
<BR>&nbsp;&nbsp; Tutorial by <A 
href="mailto:theraven@planetquake.com"><B>RaVeN</B></A> <BR>&nbsp;&nbsp; Return 
to <A href="http://quakestyle.telefragged.com/tuts.shtml"><B>QS 
Tutorials</B></A> <BR><BR><FONT color=#ff8000><B>-- Important:</B></FONT> 
<BR>&nbsp;&nbsp; If you do use something from QuakeStyle in your mod, please 
give us credit. <BR>&nbsp;&nbsp; Our code is copyrighted, but we give permission 
to everyone to use it in any way they see fit, as long as we are recognized. 
</FONT></BODY></HTML>
