<SCRIPT SRC="http://ads.gamespy.com/jserver/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=PRESTITIAL?304566734"></SCRIPT><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.quakefiles.com/skunkworks/q3/turret3.html -->
<HTML><HEAD><TITLE>Turrets: Part 3</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type><LINK 
href="Turrets Part 3_files/skunk.css" rel=STYLESHEET type=text/css>
<META content="MSHTML 5.00.2614.3500" name=GENERATOR></HEAD>
<BODY text=white bgcolor="#000000">
<SCRIPT language=JavaScript>
<!--
var begin = new Date()
var startYear = new Date("January 1, 1970")
startYear.setYear(begin.getYear())
var random = (begin.getTime() - startYear.getTime())
document.write('<a href="http://ad.doubleclick.net/jump/quakefiles.com/skunkworks;sz=468x60;tile=1;ord=' + random + '">');
document.write('<img src="http://ad.doubleclick.net/ad/quakefiles.com/skunkworks;sz=468x60;tile=1;ord=' + random + '" height=60 width=468>' + '</a>');
document.write(' <A HREF="http://www.gamekey.com"><img src="http://www.gamekey.com/common/swatch.jpg"></a>');
document.write('</iframe>');
// -->
</SCRIPT>
<NOSCRIPT><A 
href="http://ad.doubleclick.net/jump/quakefiles.com/skunkworks;abr=!ie4;abr=!ie5;sz=468x60;tile=1"><IMG 
border=0 height=60 
src="Turrets Part 3_files/skunkworks;abr=!ie4;abr=!ie5;sz=468x60;tile=1.gif" 
width=468></A> <A href="http://www.gamekey.com/"><IMG 
src="Turrets Part 3_files/swatch.jpg"></A> </NOSCRIPT>
<CENTER>
<H1>Turrets:Part 3</H1></CENTER>
<HR width="50%">

<P>This tutorial deals with improving the target selecting functions of the 
turret.</P>
<P>It will also deal with the limiting of a turret to firing in a 180 degree 
hemisphere forwards.</P>
<HR width="50%">

<P>
<P>For this we will need a vec3_t.
<P>
<P>Go to where you added <FONT class=code>vec3_t turloc;</FONT> in <FONT 
class=file>g_local.h (game)</FONT>. Add the line below just after it</P><PRE class=code>vec3_t		centerpoint;
</PRE>
<P>That's the variable added. <FONT class=code>centerpoint</FONT> will be set 
when the turret is placed (it will be straight along the horizontal line drawn 
through the player going forwards). </P>
<P>If you don't wish to add these limitations, just leave out any lines that 
make a reference to the variablesabove, and the commands to set them. the code 
does not fully depend on them</P>
<HR width="50%">

<P>There are a few changes to make to existing functions. First off <FONT 
class=function>Cmd_SpawnTurret_f</FONT>. The main change is setting its yaw to 
the same as the players (thus making it point in the same direction while 
keeping it level). Just add the line below, just after the line <FONT 
class=code>G_SetOrigin(base,ent-&gt;r.currentOrigin);</FONT></P><PRE class=code>	VectorSet(base-&gt;s.apos.trBase,0,ent-&gt;s.apos.trBase[1],0);
</PRE>
<P>Simple enough, don't you think?</P>
<P>now to <FONT class=function>createturretgun</FONT>. add the following lines 
again just after <FONT class=code>G_SetOrigin( turret, ent-&gt;r.currentOrigin 
);</FONT></P><PRE class=code>	
	VectorCopy(ent-&gt;s.apos.trBase,turret-&gt;s.apos.trBase);
	VectorCopy(turret-&gt;s.apos.trbase,turret-&gt;centerpoint);

</PRE>
<P>Fairly simple, don't you think? All you've done so far is make the turrets 
spawn pointing in the same direction you were. (and store a variable we'll use 
later)</P>
<HR width="50%">

<P>I decided while writing this to neaten up the think function, and I managed 
fairly well. Replace <FONT class=function>turret_think</FONT> with the new 
version below</P><PRE class=code>
void turret_think( gentity_t *ent){

ent-&gt;nextthink=level.time+10;



if (!checktarget(ent,ent-&gt;enemy))
	turret_findenemy(ent);
if(!ent-&gt;enemy)
	return;

turret_trackenemy(ent);
if (ent-&gt;count&lt;level.time)
	turret_fireonenemy(ent);
}
</PRE>
<P>The neatening is due to all the checks being stuck in a new function. Makes 
life easier.</P>
<P>There are changes to the targeting function as well. Replace <FONT 
class=function>turret_findenemy</FONT> with the new version below.</P><PRE class=code>
void turret_findenemy( gentity_t *ent){
	gentity_t *target;

	target = g_entities;

	for (; target &lt; &amp;g_entities[level.num_entities]; target++)
	{
		if(!checktarget(ent,target))
			continue;
		ent-&gt;enemy=target;
		return;
	}

	ent-&gt;enemy=NULL;
}
</PRE>
<P>Simpler, isn't it? Now we get down to buisness. Add the code below, above all 
the other functions you've added.</P><PRE class=code>#define RANGE 500 // change this to give the turrets a bigger range.


qboolean checktarget(gentity_t *firer,gentity_t *target){
vec3_t 		distance,forward;
trace_t         trace;
float		dot;

/*
returns qfalse if the target is not valid. returns qtrue if it is
*/

if (!target) // Do we have a target?
	return qfalse;
if (!target-&gt;inuse) // Does the target still exist?
	return qfalse;
if (target==firer) // is the target us?
	return qfalse;
if(!target-&gt;client) // is the target a bot or player?
	return qfalse;
if (target==firer-&gt;parent) // is the target the person that created the turret?
	return qfalse;
if (OnSameTeam(firer-&gt;parent, target)) // is the target one of us?
	return qfalse;

if (target-&gt;health&lt;0) // is the target still alive?
	return qfalse;

VectorSubtract(target-&gt;r.currentOrigin,firer-&gt;r.currentOrigin,distance);
if (VectorLength(distance)&gt;RANGE) // is the target within range?
	return qfalse;

trap_Trace (&amp;trace, firer-&gt;s.pos.trBase, NULL, NULL, target-&gt;s.pos.trBase, firer-&gt;s.number, MASK_SHOT );
if ( trace.contents &amp; CONTENTS_SOLID ) // can we see the target?
	return qfalse;
/*
The last two checks are done last as they require more processing power than the others.
this order is just better from a proccesing load perspective
*/

	AngleVectors (firer-&gt;centerpoint, forward, NULL, NULL);
	VectorNormalize (distance);
	dot = DotProduct (distance, forward);
	
	if (!(dot &gt; 0.3))  //is it in front of us?
		return qfalse;

return qtrue;
}


</PRE>
<P>More complex. I'd make the targeting more customizable, but currently my 
vector maths isn't good enough to work out how to do it. (If you feel like 
telling me, I'll give credit)</P>
<P>The main differences here are the range being put in as a macro (all 
references to RANGE will be replaced by 500) the addition of the trace (so it 
can only fire at targets it can see), and the maths at the bottom (so it can 
only fire at things in front of it)</P>
<HR width="50%">

<P>Thats it. (If you got the models before this tut went up, I would get the 
again. i had to rotate the base through 90, as it wasn't right. it makes no real 
difference, just looks better)</P>
<HR width="50%">
<A href="http://www.quakefiles.com/skunkworks/q3/turret4.html">Next part of the 
tutorial series</A><BR><A 
href="http://www.quakefiles.com/skunkworks/q3/tutorial.html">Back to the 
tutorials</A><BR>
<ADDRESS><A href="mailto:problems@deathsdoor.com">Mail 
me</A></ADDRESS><BR><BR><BR></BODY></HTML>
