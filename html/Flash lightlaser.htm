<SCRIPT SRC="http://ads.gamespy.com/jserver/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=PRESTITIAL?257884703"></SCRIPT><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!--INSERTADTHISPAGE -->

<html>
<head>
	<title>Code3Arena</title>
</head>

<body background="../images/bg.gif" bgcolor="#660000" text="white" link="#C05F00" vlink="#d16545">


	<!-- BEGIN BANNER AD TABLE -->
<table width="100%" border=0 cellpadding=5 cellspacing=0 align="center" background="../images/bg.gif">
  <tr>
   	 <td width=468 height=60 align="CENTER" valign="top" bgcolor=#000000>
 <center><SCRIPT SRC="http://ads.gamespy.com/jserver/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=IAB_FULL_BANNER?257884703"></SCRIPT><NOSCRIPT><A HREF="http://ads.gamespy.com/cgi-bin/adclick.exe/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=IAB_FULL_BANNER?257884703"><IMG SRC="http://ads.gamespy.com/cgi-bin/adserver.exe/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=IAB_FULL_BANNER?257884703"></A></NOSCRIPT><!--ACCIPITERADINSERT/site=PQ/AAMSZ=IAB_FULL_BANNER/AREA=ARTICLES--></center>
</td>
  </tr>
</table>
	<!-- END BANNER AD TABLE -->

<br>

	<!-- BEGIN LOGO IMAGE TABLE -->
<table width="100%" cellspacing="0" cellpadding="0" border="1" align="center" bgcolor=#000000>
  <tr>
     <td align="CENTER">
	  <img src="/code3arena/images/logo.gif" width="500" height="137" border="0" alt="Code3Arena">
</td>
  </tr>
</table>
	<!-- END LOGO IMAGE TABLE -->
<p>

	<!-- BEGIN TOP HEIRARCHY -->
<table width="100%" cellpadding=0 cellspacing=0 border=0 bgcolor="#000000">
  <tr>
	<td><img src="/code3arena/images/ouricon.gif"></td>
	<td width="100%" bgcolor=#000000>
	<font face="Verdana, Arial" size="2" color="#eeeeee"><b>
	<A HREF="http://www.planetquake.com">PlanetQuake</A> |
	<A HREF="http://www.planetquake.com/code3arena">Code3Arena</A> |
	<A HREF="http://www.planetquake.com/code3arena/tutorials">Tutorials</A> |
	<a href="tutorial24.shtml"><< Prev</a> |
	Tutorial 25 |
	<a href="tutorial26.shtml">Next >></a>
	</b></font>
	</td>
  </tr>
</table>
<p>
	<!-- END TOP HEIRARCHY -->

	<!-- BEGIN MAIN TABLE HERE-->
<table width="100%" border=0 cellpadding=0 cellspacing=0 align=center bgcolor=#4B0202>
  <tr>

   <!-- BEGIN LEFT NAVBAR MENU -->
	<td valign=top bgcolor="#000000">
<table width=150 bgcolor="#000000" valign=top border=0 cellpadding=10 cellspacing=0 >
  <tr>
	 <td bgcolor=#000000 valign=top>
      <p>
      <a href="/code3arena/index.shtml"><img src="/code3arena/images/minilogo.gif" width="150" height="80" border="0" alt="menu"></a>
	  <p><!-- C40B02 -->
	  <font face=arial color="#C05F00" size=2>
<strong>
<LI> <a href="/code3arena/index.shtml">Home/News</a>
<LI> <a href="/code3arena/modsource.shtml">ModSource</a>
<LI> <a href="/code3arena/compilers.shtml">Compiling</a>
<LI> <a href="/code3arena/help.shtml">Help!!!</a>
<LI> <a href="/code3arena/submission.shtml">Submission</a>
<LI> <a href="/code3arena/contributors.shtml">Contributors</a>
<LI> <a href="/code3arena/staff.shtml">Staff</a>
<LI> <a href="/code3arena/downloads.shtml">Downloads</a>
</strong>
<P>

	    <img src="/code3arena/images/tutorials.gif" width="80" height="25" border="0" alt="Tutorials">
	  <font color="#C05F00" size=1>
<strong>
<BR> <a href="/code3arena/tutorials"> <  Index  ></a>
<BR> 1. <a href="/code3arena/tutorials/tutorial1.shtml">Mod making 101</a>
<BR> 2. <a href="/code3arena/tutorials/tutorial2.shtml">Up 'n running</a>
<BR> 3. <a href="/code3arena/tutorials/tutorial3.shtml">Hello, QWorld!</a>
<BR> 4. <a href="/code3arena/tutorials/tutorial4.shtml">Infinite Haste</a>
<BR> 5. <a href="/code3arena/tutorials/tutorial5.shtml">Armor Piercing Rails</a>
<BR> 6. <a href="/code3arena/tutorials/tutorial6.shtml">Bouncing Rockets</a>
<BR> 7. <a href="/code3arena/tutorials/tutorial7.shtml">Cloaking</a>
<BR> 8. <a href="/code3arena/tutorials/tutorial8.shtml">Ladders</a>
<BR> 9. <a href="/code3arena/tutorials/tutorial9.shtml">Favourite Server</a>
<BR> 10. <a href="/code3arena/tutorials/tutorial10.shtml">Flame Thrower</a>
<BR> 11. <a href="/code3arena/tutorials/tutorial11.shtml">Vortex Grenades</a>
<BR> 12. <a href="/code3arena/tutorials/tutorial12.shtml">Grapple</a>
<BR> 13. <a href="/code3arena/tutorials/tutorial13.shtml">Lightning Discharge</a>
<BR> 14. <a href="/code3arena/tutorials/tutorial14.shtml">Locational Damage</a>
<BR> 15. <a href="/code3arena/tutorials/tutorial15.shtml">Leg Shots</a>
<BR> 16. <a href="/code3arena/tutorials/tutorial16.shtml">Weapon Switching</a>
<BR> 17. <a href="/code3arena/tutorials/tutorial17.shtml">Scoreboard frag-rate</a>
<BR> 18. <a href="/code3arena/tutorials/tutorial18.shtml">Vortex Grenades II</a>
<BR> 19. <a href="/code3arena/tutorials/tutorial19.shtml">Vulnerable Missiles</a>
<BR> 20. <a href="/code3arena/tutorials/tutorial20.shtml">Creating Classes</a>
<BR> 21. <a href="/code3arena/tutorials/tutorial21.shtml">Scrolling Credits</a>
<BR> 22. <a href="/code3arena/tutorials/tutorial22.shtml">Weapon Dropping</a>
<BR> 23. <a href="/code3arena/tutorials/tutorial23.shtml">Anti-Gravity Boots</a>
<BR> 24. <a href="/code3arena/tutorials/tutorial24.shtml">HUD scoreboard</a>
<BR> 25. <a href="/code3arena/tutorials/tutorial25.shtml">Flashlight and laser</a>
<BR> 26. <a href="/code3arena/tutorials/tutorial26.shtml">Weapon Positioning</a>
<BR> 27. <a href="/code3arena/tutorials/tutorial27.shtml">Weapon Reloading</a>
<BR> 28. <a href="/code3arena/tutorials/tutorial28.shtml">Progressive Zooming</a>
<BR> 29. <a href="/code3arena/tutorials/tutorial29.shtml">Rotating Doors</a>
<BR> 30. <a href="/code3arena/tutorials/tutorial30.shtml">Beheading (headshot!)</a>
<BR> 31. <a href="/code3arena/tutorials/tutorial31.shtml">Alt Weapon Fire</a>
<BR> 32. <a href="/code3arena/tutorials/tutorial32.shtml">Popup Menus I</a>
<BR> 33. <a href="/code3arena/tutorials/tutorial33.shtml">Popup Menus II</a>
<BR> 34. <a href="/code3arena/tutorials/tutorial34.shtml">Cluster Grenades</a>
<BR> 35. <a href="/code3arena/tutorials/tutorial35.shtml">Homing Rockets</a>
<BR> 36. <a href="/code3arena/tutorials/tutorial36.shtml">Spreadfire Powerup</a>
<BR> 37. <a href="/code3arena/tutorials/tutorial37.shtml">Instagib gameplay</a>
<BR> 38. <a href="/code3arena/tutorials/tutorial38.shtml">Accelerating rockets</a>
<BR> 39. <a href="/code3arena/tutorials/tutorial39.shtml">Server only Instagib</a>
<BR> 40. <a href="/code3arena/tutorials/tutorial40.shtml">Advanced Grapple Hook</a>
<BR> 41. <a href="/code3arena/tutorials/tutorial41.shtml">Unlagging your mod</a>
</strong>
	  </font>
      <p><br>
	  
	  <img src="/code3arena/images/articles.gif" width="80" height="25" border="0" alt="Articles">
	  <font color="#C05F00" size=1>
<strong>
<BR> <a href="/code3arena/articles"> <  Index  > </a>
<BR> 1. <a href="/code3arena/articles/article1.shtml">Entities</A>
<BR> 2. <a href="/code3arena/articles/article2.shtml">Vectors</A>
<BR> 3. <a href="/code3arena/articles/article3.shtml">Good Coding</A>
<BR> 4. <a href="/code3arena/articles/article4.shtml">Compilers I</A>
<BR> 5. <a href="/code3arena/articles/article5.shtml">Compilers II</A>
<BR> 6. <a href="/code3arena/articles/article6.shtml">UI Menu Primer I</A>
<BR> 7. <a href="/code3arena/articles/article7.shtml">UI Menu Primer II</A>
<BR> 8. <a href="/code3arena/articles/article8.shtml">UI Menu Primer III</A>
<BR> 9. <a href="/code3arena/articles/article9.shtml">QVM Communication, Cvars, commands</A>
<BR> 10. <a href="/code3arena/articles/article10.shtml">Metrowerks CodeWarrior</A>
<BR> 11. <a href="/code3arena/articles/article11.shtml">1.27g code, bugs, batch</A>
</strong>
	  </font>
	  <p>
	  <!-- <hr color="#C0C0C0">  -->
	  <br>

	  <img src="/code3arena/images/links.gif" width="80" height="25" border="0" alt="Links">
	  <font color="#C05F00">
	  <small>
<li><a href="http://www.planetquake.com/quake3/files.shtml">Quake3 Files</a>
<li><a href="http://forums.planetquake.com/">Quake3 Forums</a>
<li><a href="http://dynamic.gamespy.com/~assim2/wwwshow.cgi?board=quake3">Q3A Editing Message Board</a>
<li><a href="http://www.planetquake.com/quake3/hosted/editing.shtml">Quake3 Editing</a>
	  </small>
	  </font>
	  <p><br>
	  
	  <img src="/code3arena/images/feedback.gif" width="80" height="25" border="0" alt="Feedback">
	  <font color="#C05F00">
	  <small>
<li><a href="mailto:sumfuka@planetquake.com">SumFuka</A>
<li><a href="mailto:calrathan@captured.com">Calrathan</A>
<li><a href="mailto:hypothermia@planetquake.com">
	<font color="#FF0000">H</font><font color="#FFFF00">y</font><font
	color="#CC33CC">p</font><font color="#3333FF">o</font>Thermia
	</A>
<li><a href="mailto:warzone@planetquake.com">WarZone</A>
	  </small>
	  </font>
	  <p><br>
	  
	  <img src="/counter/count.exe?ft=3&df=code3arena.dat&dd=D">
	   <p><br><br><br>
	  <small>Site Design by:</small>
	  <br>
	  <a href="mailto:ladyice@planetice.org,jeh@planetjeh.com"><img src="/code3arena/images/icelogo_sm.jpg" width="88" height="31" border="0" align="middle" alt="ICEmosis Design"></a>
	
	  </font>
	  <br><br>
    </td>

  </tr>
</table>
	</td>
	<!-- END LEFT NAVBAR MENU -->
	<!-- BEGIN DIVIDER -->
	<td valign=top background="../images/bg.gif">
<table width=20 cellpadding=0 cellspacing=0 border=0 background="../images/bg.gif">
  <tr>
	<td background="../images/bg.gif">
	  &nbsp;
	</td>
  </tr>
</table>
	</td>
	<!-- END DIVIDER -->


	<!-- MAIN TEXT AREA -->
	<td valign=top bgcolor=#000000>
<table width="100%" cellpadding=15 cellspacing=10 border=0 bgcolor=#000000 valign=top>
  <tr>
	<td valign=top>
<font face="Verdana, Arial" size="2" color="#eeeeee">


<center><b><font color="#C05F00" size=5>
TUTORIAL 25 - Flashlight and Lasersight
</font></b><br>by <b><a href="mailto:drivec@home.com">Drive C:</A></b></center><p>

Since I have just finished and corrected the code for these and I see that no one else has written
a tutorial on this, I thought that I would.<P>

To introduce, this tutorial will produce the effects of lasersight and flashlight when
implemented.  The reason I have written this for BOTH flashlight AND lasersight is that
the basic code for the entity and movement are the same and its simpler to write it
once, right?  You dont have to use both if you dont want to, its just here if you
need it.<P>

We will be making changes all across the board here.  Both cgame and game will be modified:<P>
<font color="#ABCDEF">
g_cmds.c<br>
g_weapon.c<p>
cg_main.c<font color="FFFABC"> ->really minor</font><br>
cg_ents.c<p>
g.local.h<font color="FFFABC"> ->really minor</font><br>
cg_local.h <font color="FFFABC"> ->really minor</font><br>
bg_public.h <font color="FFFABC"> ->really minor</font><p>
</font>

Just one note before we begin.  I am not big on making comments here in this tutorial, but please do.
Everywhere you modify the code, make a comment.  You do not know (maybe you do) how helpful this can be,
so PLEASE do it->it might save you from doing a whole lot of things over again :).<P><br>

<font color="#E07F44"><H4>
1. Setting Things Up -> the minor things
</H4></font>

We first have to declare some functions, variables, and types so lets do it!<P>

A1. Goto g_local.h, line ~490 and insert below:<P>

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
	void Weapon_HookFree (gentity_t *ent);
	void Weapon_HookThink (gentity_t *ent);<font color="#ff6060">			
	void Laser_Gen (gentity_t *ent, int type);
	void Laser_Think( gentity_t *self );</font>
</pre></font>
A2. Goto g_local.h, line ~274 and insert below:<P>

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
	int			lastKillTime;		// for multiple kill rewards

	qboolean	fireHeld;			// used for hook
	gentity_t	*hook;				// grapple hook if out<font color="#ff6060">			
	gentity_t	*lasersight;			// lasersight OR flashlight if in use</font>

	// timeResidual is used to handle events that happen every second
	// like health / armor countdowns and regeneration
	int			timeResidual;
</pre></font>

B. Goto cg_local.h, line ~568 and insert below:<P>
<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
	qhandle_t	viewBloodShader;
	qhandle_t	tracerShader;
	qhandle_t	crosshairShader[NUM_CROSSHAIRS];<font color="#ff6060">			
	qhandle_t	laserShader;</font>


	qhandle_t	lagometerShader;

</pre></font>
C. Goto cg_ents.c, line ~7 and insert:<P>
<font face="Verdana, Arial" size="3" color="#ff6060"><pre>
	
	static void CG_LaserSight( centity_t *cent );

</pre></font>

D. Goto cg_main.c, line ~585 and insert below:<P>
<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
	cgs.media.tracerShader = trap_R_RegisterShader( "gfx/misc/tracer" );
	cgs.media.selectShader = trap_R_RegisterShader( "gfx/2d/select" );

	for ( i = 0 ; i < NUM_CROSSHAIRS ; i++ ) {
		cgs.media.crosshairShader[i] = trap_R_RegisterShader( va("gfx/2d/crosshair%c", 'a'+i) );
	}<font color="#ff6060">			
	
	cgs.media.laserShader = trap_R_RegisterShader( "sprites/laser" );</font>
	cgs.media.backTileShader = trap_R_RegisterShader( "gfx/2d/backtile" );
	cgs.media.noammoShader = trap_R_RegisterShader( "icons/noammo" );
	
</pre></font>

E. Goto bg_public.h, line ~585 and insert below:<P>
<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
	ET_TELEPORT_TRIGGER,
	ET_INVISIBLE,
	ET_GRAPPLE,				// grapple hooked on wall<font color="#ff6060">			
	ET_LASER,				// lasersight entity type</font>

	ET_EVENTS
</pre></font><p>
What we have done here is: (A1) declared the laser spawner/despawner function.  (A2) Added a subordinate entity
to gclient, so we can from gclient structure control the client's laser. (B)
created a new shader for our lasersight in cgame.  (C) Declared the laser sight draw function.  (D) Told cgame what cg.media to assign
to our shader.  (E) created a new entity type ET_LASER.<P><br>



<font color="#E07F44"><H4>
2. Creating the Command
</H4></font>

The first thing to do here is to give the client the ability to
turn on or off the laser.  If you are making a mod, you will
most likely change this so that the client cannot simply
type "laser" in the console, rather make it a powerup or
something.<P>

As we all remember from before: go into g_cmds.c down to line ~1220
to the else if statements, and insert this code so that typing "laser"
and "flashlight" in the console turn on/off the laser/flashlight.
<P>

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
	else if (Q_stricmp (cmd, "gc") == 0)
		Cmd_GameCommand_f( ent );
	else if (Q_stricmp (cmd, "setviewpos") == 0)
		Cmd_SetViewpos_f( ent );
<font color="#ff6060">			
	else if (Q_stricmp (cmd, "laser") == 0)
		Laser_Gen( ent, 1 );//1=Laser, 2=Flashlight
	else if (Q_stricmp (cmd, "flashlight") == 0)
		Laser_Gen( ent, 2 );</font>
</pre></font>

Basically, we have created two commands, which repond to console commands /laser and /flashlight, running
our Laser_Gen function with 1 and 2, signifying flashlight and laser, repsectively.<P><br>

<font color="#E07F44"><H4>
3. Create the Stupid Entity
</H4></font>

Go into g_weapon.c, at the very bottom: you can put it anywhere, but I place it here because it kinda pertains to weapon:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
	<font color="#ff6060">			
/*
============
Laser Sight Stuff

	Laser Sight / Flash Light Functions
============
*/

void Laser_Gen( gentity_t *ent, int type )	{
	gentity_t	*las;
	int oldtype;

	//Get rid of you?
	if ( ent->client->lasersight) {
		  oldtype = ent->client->lasersight->s.eventParm;
		  G_FreeEntity( ent->client->lasersight );
		  ent->client->lasersight = NULL;
		  if (oldtype == type)
			  return;
	}

	las = G_Spawn();

	las->nextthink = level.time + 10;
	las->think = Laser_Think;
	las->r.ownerNum = ent->s.number;
	las->parent = ent;
	las->s.eType = ET_LASER;

	//Lets tell it if flashlight or laser
	if (type == 2)	{
		las->s.eventParm = 2; //tells CG that it is a flashlight
		las->classname = "flashlight";
	}
	else {
		las->s.eventParm = 1; //tells CG that it is a laser sight
		las->classname = "lasersight";
	}

	ent->client->lasersight = las;
}

void Laser_Think( gentity_t *self )	{
	vec3_t		end, start, forward, up;
	trace_t		tr;

	//If Player Dies, You Die -> now thanks to Camouflage!
	if (self->parent->client->ps.pm_type == PM_DEAD)  {
		G_FreeEntity(self);
		return;
	}

	//Set Aiming Directions
	AngleVectors(self->parent->client->ps.viewangles, forward, right, up);
	CalcMuzzlePoint(self->parent, forward, right, up, start);
	VectorMA (start, 8192, forward, end);

	//Trace Position
	trap_Trace (&tr, start, NULL, NULL, end, self->parent->s.number, MASK_SHOT );

	//Did you not hit anything?
	if (tr.surfaceFlags & SURF_NOIMPACT || tr.surfaceFlags & SURF_SKY)	{
		self->nextthink = level.time + 10;
		trap_UnlinkEntity(self);
		return;
	}

	//Move you forward to keep you visible
	if (tr.fraction != 1)	VectorMA(tr.endpos,-4,forward,tr.endpos);

	//Set Your position
	VectorCopy( tr.endpos, self->r.currentOrigin );
	VectorCopy( tr.endpos, self->s.pos.trBase );

	vectoangles(tr.plane.normal, self->s.angles);

	trap_LinkEntity(self);

	//Prep next move
	self->nextthink = level.time + 10;
}
</font>

</pre></font>

Well that will do all the stuff that creates, deletes, and moves our entity.  The first function generates the entity
and sets it into thinking every 1/100 second, and it thinks in the bottom function by tracing the player's view,
and setting the laser's position at the end of the trace.  Just some notes: I like to sneak variables into unused slots
whenever possible to prevent over-modification (like the weapon drop function -> there're no need for all those changes he made).
This is the reason why I have chosen s.eventparm to sneak whether its a lasersight or flashlight.  Then, in cgame, we will be able
to differentiate and draw the thing.
<p>

<br>
<font color="#E07F44"><H4>
4. Color it, Light it, Whatever
</H4></font>

These are modifications to cgame so that an ET_LASER will either create a sprite, or a light, whichever it actually is.
To start, we have to modify the switch statement in cg_ents.c at about ln. 712.
<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
	case ET_SPEAKER:
		CG_Speaker( cent );
		break;
	case ET_GRAPPLE:
		CG_Grapple( cent );
		break;<font color="#ff6060">			
	case ET_LASER:
		CG_LaserSight( cent );
		break;</font>
	}
}
</pre></font>

This just tells us that when we have an ET_LASER centity, we will call CG_LaserSight, which will be responsible for actually adding
the graphic to the scene.  At the bottom of cg_ents.c:
<font face="Verdana, Arial" size="3" color="#ff6060"><pre>
/*
==================
CG_LaserSight
  Creates the laser
==================
*/

static void CG_LaserSight( centity_t *cent )  {
	refEntity_t			ent;


	// create the render entity
	memset (&ent, 0, sizeof(ent));
	VectorCopy( cent->lerpOrigin, ent.origin);
	VectorCopy( cent->lerpOrigin, ent.oldorigin);

	if (cent->currentState.eventParm == 1)
	{
		ent.reType = RT_SPRITE;
		ent.radius = 2;
		ent.rotation = 0;
		ent.customShader = cgs.media.laserShader;
		trap_R_AddRefEntityToScene( &ent );
	}
	else	{
		trap_R_AddLightToScene(ent.origin, 200, 1, 1, 1);
	}

	
}
</font></pre>
This function is fairly simple.  What it does first is that it differentiates the laser and flashlight.
If it is a lasersight, then it sets the refentity to a sprite with our shader.  If not, it simply adds
a white light with intensity 200 (which turns out to be directly related to the radius of the spot).  Basically,
this would be the end of the story except for one thing -> where we gonna get our shader?<p><br>
<font color="#E07F44"><H4>
5. Screw it, We're Done
</H4></font>
Yeah I wish.  Fortunately, you can go ahead and compile, cause we're done with the source.  Now we have to make
1. your shader and 2. your graphic.  This should be a piece of cake for all you shader people out there.  If not, 
then create a file in the /scripts directory with  extension .shader (or append a preexisting shader).  Here it is:
<font face="Verdana, Arial" size="3" color="ABCABC"><pre>

sprites/laser
{
	cull disable
	{
		clampmap sprites/laser.jpg
		blendfunc GL_ONE GL_ONE
        }
}
</font></pre>
<p>
Now we have to make our image.  Fortunately, for all y'all who cant make any images, I have one ready for you:
<image src="laser.jpg"></image>  For those who cannot read
the above shader, you won't know where to put it, and I'm not gonna say, you should be able to figure it out :).
Well guys, that's it.  We're done, so go play your game with your laser sight, and make whatever modifications
you need to make, cause c-mon, you cant just copy and paste, you have to learn.  So anyway, thanks for letting
me write this and I think maybe this will be worth something to someone.  Oh, BTW, thanks to
Quake DeveLS for letting me look over the Q2 laser.  It really made me see why mine wasnt working (dang linkentity).
<p>Good Luck all coders -> <a href="mailto:drivec@home.com">Drive C:</a>
      <p>              
    </td>			  
  </tr>
</table>
	<!-- END MAIN TABLE -->
				                
  </tr>
</table>
<p>

	<!-- BEGIN BOTTOM HEIRARCHY -->
<table width="100%" cellpadding=0 cellspacing=0 border=0 bgcolor="#000000">
  <tr>
    <td><img src="/code3arena/images/ouricon.gif"></td>
    <td width="100%" bgcolor=#000000>
	<font face="Verdana, Arial" size="2" color="#eeeeee"><b>
	<A HREF="http://www.planetquake.com">PlanetQuake</A> |
	<A HREF="http://www.planetquake.com/code3arena">Code3Arena</A> |
	<A HREF="http://www.planetquake.com/code3arena/tutorials">Tutorials</A> |
	<a href="tutorial24.shtml"><< Prev</a> |
	Tutorial 25 |
	<a href="tutorial26.shtml">Next >></a>
	</b></font>
	</td>
  </tr>
</table>
<p>
	<!-- END BOTOTM HEIRARCHY -->

</body>
</html>
