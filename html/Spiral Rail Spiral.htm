<SCRIPT SRC="http://ads.gamespy.com/jserver/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=PRESTITIAL?304465250"></SCRIPT><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0057)http://www.planetquake.com/greenhouseefx/tutorial_1.shtml -->
<HTML><HEAD><TITLE>GreenHouseEFX: Tutorials | Rail Spiral</TITLE>
<META content="text/html; charset=iso-8859-1" http-equiv=Content-Type>
<META content="MSHTML 5.00.2614.3500" name=GENERATOR></HEAD>
<BODY background="Spiral Rail Spiral_files/bk_1.jpg" bgColor=#ffffff 
leftMargin=0 onload="preloadImages(); getDefaultImages();" text=#000000 
topMargin=2 marginheight="2" marginwidth="2">
<TABLE border=0 cellPadding=0 cellSpacing=0 height="100%" width="100%">
  <TBODY>
  <TR>
    <TD align=left noWrap vAlign=top width=125>
      <SCRIPT language=JavaScript><!--

var navImagesLoaded = false;

function getDefaultImages() {
	//Get the ".src" of all default images and store them in image objects
	if (document.images) {
		btnHome0 = new Image(); btnHome0.src = eval("document['btnHome'].src");
		btnNews0 = new Image(); btnNews0.src = eval("document['btnNews'].src");
		btnMods0 = new Image(); btnMods0.src = eval("document['btnMods'].src");
		btnScreens0 = new Image(); btnScreens0.src = eval("document['btnScreens'].src");
		btnDownloads0 = new Image(); btnDownloads0.src = eval("document['btnDownloads'].src");
		btnDocs0 = new Image(); btnDocs0.src = eval("document['btnDocs'].src");
		btnServers0 = new Image(); btnServers0.src = eval("document['btnServers'].src");
		btnReviews0 = new Image(); btnReviews0.src = eval("document['btnReviews'].src");
		btnLinks0 = new Image(); btnLinks0.src = eval("document['btnLinks'].src");
		btnCode0 = new Image(); btnCode0.src = eval("document['btnCode'].src");
		btnForums0 = new Image(); btnForums0.src = eval("document['btnForums'].src");
		btnEmail0 = new Image(); btnEmail0.src = eval("document['btnEmail'].src");
		//btnHire0 = new Image(); btnHire0.src = eval("document['btnHire'].src");
	}
}

function preloadImages() {
	if (document.images) {
		btnHome1 = new Image(); btnHome1.src = "images/btn_home_1.jpg";
		btnNews1 = new Image(); btnNews1.src = "images/btn_news_1.jpg";
		btnMods1 = new Image(); btnMods1.src = "images/btn_mods_1.jpg";
		btnScreens1 = new Image(); btnScreens1.src = "images/btn_screens_1.jpg";
		btnDownloads1 = new Image(); btnDownloads1.src = "images/btn_dwnld_1.jpg";
		btnDocs1 = new Image(); btnDocs1.src = "images/btn_docs_1.jpg";
		btnServers1 = new Image(); btnServers1.src = "images/btn_srvr_1.jpg";
		btnReviews1 = new Image(); btnReviews1.src = "images/btn_reviews_1.jpg";
		btnLinks1 = new Image(); btnLinks1.src = "images/btn_links_1.jpg";
		btnCode1 = new Image(); btnCode1.src = "images/btn_code_1.jpg";
		btnForums1 = new Image(); btnForums1.src = "images/btn_forums_1.jpg";
		btnEmail1 = new Image(); btnEmail1.src = "images/btn_email_1.jpg";
		//btnHire1 = new Image(); btnHire1.src = "images/btn_hire_1.jpg";

		return (navImagesLoaded = true);
	}
}

function rollIn(imgName) {
	if (document.images && navImagesLoaded == true)
        document[imgName].src = eval(imgName + "1.src");
}

function rollOut(imgName) {
    if (document.images && navImagesLoaded == true)
        document[imgName].src = eval(imgName + "0.src");
}

function removerect(page) {
	if (navigator.appName == 'Microsoft Internet Explorer')
		page.blur();
}

// -->
</SCRIPT>

      <TABLE align=left border=0 cellPadding=0 cellSpacing=0 height="100%" 
      width=125 name="table_navigation">
        <TBODY>
        <TR>
          <TD align=left noWrap vAlign=top>
            <P><FONT color=#999999 face="Arial, Helvetica, sans-serif" 
            size=2>cool "leaf" logo<BR>goes here...</FONT></P>
            <P><A href="http://www.planetquake.com/greenhouseefx/index.shtml" 
            onmouseout="rollOut('btnHome')" onmouseover="rollIn('btnHome')"><IMG 
            border=0 height=24 name=btnHome 
            src="Spiral Rail Spiral_files/btn_home_0.jpg" 
            width=107></A><BR><BR><A 
            href="http://www.planetquake.com/greenhouseefx/news.shtml" 
            onmouseout="rollOut('btnNews')" onmouseover="rollIn('btnNews')"><IMG 
            border=0 height=24 name=btnNews 
            src="Spiral Rail Spiral_files/btn_news_0.jpg" width=107></A><BR><A 
            href="http://www.planetquake.com/greenhouseefx/downloads.shtml" 
            onmouseout="rollOut('btnMods')" onmouseover="rollIn('btnMods')"><IMG 
            border=0 height=24 name=btnMods 
            src="Spiral Rail Spiral_files/btn_mods_0.jpg" width=107></A><BR><A 
            href="http://www.planetquake.com/greenhouseefx/screens.shtml" 
            onmouseout="rollOut('btnScreens')" 
            onmouseover="rollIn('btnScreens')"><IMG border=0 height=24 
            name=btnScreens src="Spiral Rail Spiral_files/btn_screens_0.jpg" 
            width=107></A><BR><IMG border=0 height=5 
            src="Spiral Rail Spiral_files/nav_spacer.gif" width=107><BR><A 
            href="http://www.planetquake.com/greenhouseefx/downloads.shtml" 
            onmouseout="rollOut('btnDownloads')" 
            onmouseover="rollIn('btnDownloads')"><IMG border=0 height=24 
            name=btnDownloads src="Spiral Rail Spiral_files/btn_dwnld_0.jpg" 
            width=107></A><BR><A 
            href="http://www.planetquake.com/greenhouseefx/documents.shtml" 
            onmouseout="rollOut('btnDocs')" onmouseover="rollIn('btnDocs')"><IMG 
            border=0 height=24 name=btnDocs 
            src="Spiral Rail Spiral_files/btn_docs_0.jpg" width=107><BR></A><A 
            href="http://www.planetquake.com/greenhouseefx/servers.shtml" 
            onmouseout="rollOut('btnServers')" 
            onmouseover="rollIn('btnServers')"><IMG border=0 height=24 
            name=btnServers src="Spiral Rail Spiral_files/btn_srvr_0.jpg" 
            width=107></A><BR><IMG border=0 height=5 
            src="Spiral Rail Spiral_files/nav_spacer.gif" width=107><BR><A 
            href="http://www.planetquake.com/greenhouseefx/reviews.shtml" 
            onmouseout="rollOut('btnReviews')" 
            onmouseover="rollIn('btnReviews')"><IMG border=0 height=24 
            name=btnReviews src="Spiral Rail Spiral_files/btn_reviews_0.jpg" 
            width=107></A><BR><A 
            href="http://www.planetquake.com/greenhouseefx/gallery.shtml" 
            onmouseout="rollOut('btnLinks')" 
            onmouseover="rollIn('btnLinks')"><IMG border=0 height=24 
            name=btnLinks src="Spiral Rail Spiral_files/btn_links_0.jpg" 
            width=107></A><BR><A 
            href="http://www.planetquake.com/greenhouseefx/tutorial_main.shtml" 
            onmouseout="rollOut('btnCode')" onmouseover="rollIn('btnCode')"><IMG 
            border=0 height=24 name=btnCode 
            src="Spiral Rail Spiral_files/btn_code_0.jpg" width=107></A><BR><IMG 
            border=0 height=5 src="Spiral Rail Spiral_files/nav_spacer.gif" 
            width=107><BR><A 
            href="http://www.planetquake.com/greenhouseefx/forums.shtml" 
            onmouseout="rollOut('btnForums')" 
            onmouseover="rollIn('btnForums')"><IMG border=0 height=24 
            name=btnForums src="Spiral Rail Spiral_files/btn_forums_0.jpg" 
            width=107><BR></A><BR><A href="mailto:q3coliseum@hotmail.com" 
            onclick=removerect(this) onmouseout="rollOut('btnEmail')" 
            onmouseover="rollIn('btnEmail')"><IMG border=0 height=24 
            name=btnEmail src="Spiral Rail Spiral_files/btn_email_0.jpg" 
            width=107></A><BR><BR></P>
            <P align=center>&nbsp;</P>
            <P align=left><IMG 
          src="Spiral Rail Spiral_files/countisapi.gif"></P></TD></TR></TBODY></TABLE></TD>
    <TD align=left vAlign=top width="100%">
      <TABLE border=0 cellPadding=0 cellSpacing=0 height=140 width="100%" 
      name="table_header">
        <TBODY>
        <TR>
          <TD align=middle height=78 noWrap vAlign=center><IMG height=78 
            src="Spiral Rail Spiral_files/logo.jpg" width=450> </TD></TR>
        <TR>
          <TD align=middle height=62 noWrap vAlign=center><IFRAME 
            frameBorder=0 height=60 marginHeight=0 marginWidth=0 scrolling=no 
            src="Spiral Rail Spiral_files/pq_rm.htm" 
            width=468><ILAYER SRC="http://adcontent.gamespy.com/flycast/pq_rm.html" VISIBILITY=show WIDTH=468 HEIGHT=60 BGCOLOR="#ffffff"></ILAYER></IFRAME></TD></TR>
        <TR>
          <TD height=20 noWrap>
            <TABLE align=left border=0 cellPadding=0 cellSpacing=0 height=20 
            width=27>
              <TBODY>
              <TR>
                <TD><IMG border=0 height=20 hspace=0 
                  src="Spiral Rail Spiral_files/red_left.jpg" 
              width=27></TD></TR></TBODY></TABLE>
            <TABLE align=left border=0 cellPadding=0 cellSpacing=0 height=20 
            width="100%" name="table_motd">
              <TBODY>
              <TR>
                <TD align=left 
                background="Spiral Rail Spiral_files/gred_red.jpg" noWrap 
                vAlign=center><FONT face="Arial, Helvetica, sans-serif" 
                  size=2><B>IMPORTANT BULLETIN: &nbsp;Coliseum2 v2.3 available 
                  !!</B></FONT></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
      <TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
        <TBODY>
        <TR>
          <TD height=4></TD></TR></TBODY></TABLE>
      <TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
        <TBODY>
        <TR>
          <TD height=40>
            <TABLE align=left border=0 cellPadding=0 cellSpacing=0 height=40 
            width=27>
              <TBODY>
              <TR>
                <TD><IMG height=40 
                  src="Spiral Rail Spiral_files/left_black.jpg" 
              width=27></TD></TR></TBODY></TABLE>
            <TABLE align=left border=0 cellPadding=0 cellSpacing=0 height=40 
            width="100%">
              <TBODY>
              <TR>
                <TD background="Spiral Rail Spiral_files/grad_bw.jpg"><FONT 
                  face="Arial, Helvetica, sans-serif" size=6><B><FONT 
                  color=#ffffff size=5>Tutorial 1: &nbsp;<FONT size=3>Rail 
                  Spiral &nbsp;</FONT></FONT><FONT color=#ffffff 
                  face="Arial, Helvetica, sans-serif" size=4><FONT size=2>By 
                  Steve Kemper (Scatster) &amp; Manuel Tran 
                  (WarMonger)</FONT></FONT></B></FONT></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
      <P><FONT color=#000000 face="Arial, Helvetica, sans-serif" size=2>By 
      popular demand, the following is the spiral rail code developed for the 
      Coliseum2 Mod<BR>You may use this code in your mods but you must include 
      Manuel Tran and Steve Kemper in your credits.<BR><B></B></FONT></P>
      <P><FONT color=#000000 face="Arial, Helvetica, sans-serif" size=2>The 
      spiral rail is a new function to allow you to switch back and forth to the 
      regular rail code.<BR>Add the new function to the end of 
      <B>cg_weapon.c</B>.</FONT></P>
      <P><FONT color=#009933 face=Fixedsys>//Rail spiral by Steve Kemper and 
      Manuel Tran</FONT><FONT color=#0000ff face=Fixedsys> </FONT><FONT 
      color=#0000ff face=Fixedsys><BR>void</FONT><FONT face=Fixedsys> 
      CG_SpiralTrail (clientInfo_t *ci, vec3_t start, vec3_t 
      end)<BR></FONT><FONT 
      face=Fixedsys>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vec3_t axis[36], move, 
      move2, next_move, vec, temp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT 
      color=#0000ff>float</FONT> &nbsp;len;<BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT 
      color=#0000ff>int</FONT> &nbsp;&nbsp;&nbsp;i, j, k, 
      skip;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT><FONT 
      face=Fixedsys>localEntity_t 
      *le;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;refEntity_t&nbsp;&nbsp;&nbsp;*re;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      <FONT color=#0000ff>#define</FONT> RADIUS 
      &nbsp;&nbsp;9<BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT 
      color=#0000ff>#define</FONT> ROTATION 1<BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT 
      color=#0000ff>#define</FONT> SPACING 
      &nbsp;5<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT color=#009933>//Better line 
      the spiral with the rail run muzzle.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      start[2] -= 4;<BR>&nbsp;&nbsp;&nbsp;&nbsp; VectorCopy (start, 
      move);<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT color=#009933>//Assign vec a 
      vector that represents the rail line.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      VectorSubtract (end, start, vec);<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT 
      color=#009933>//Normalizes vec thus making it a directional 
      vector.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp; len = VectorNormalize 
      (vec);<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT color=#009933>//Assign temp a 
      normalized vector perpendicular to our direction 
      vector.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp; PerpendicularVector(temp, 
      vec);<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT color=#009933>//We are ultra 
      effecient by knowing that since the spiral will wrap several 
      times<BR>&nbsp;&nbsp;&nbsp;&nbsp; //along the line while moving foraward, 
      we only have to compute the positions of<BR>&nbsp;&nbsp;&nbsp;&nbsp; //the 
      dots around the circle only ONCE. We store these in a local array and 
      then<BR>&nbsp;&nbsp;&nbsp;&nbsp; //simply project each dot forward a 
      little to create the spiral effect.<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      //Index 0 represents 0 and 35 = 350 degrees rotation - each dot is 10 
      degrees apart.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT 
      color=#0000ff>for</FONT> (i = 0 ; i &lt; 36; 
      i++)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      &nbsp;RotatePointAroundVector(axis[i], vec, temp, i * 
      10);<BR><BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT color=#009933>//***** Core 
      *****</FONT><BR><FONT color=#009933>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//We 
      draw the core first. &nbsp;Since it has a shorter lifespan than the coil 
      itself,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//if we run out of temp entities 
      while drawing the coil, the temp entity for 
      the<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//core will be the first one 
      "stolen".</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp; le = 
      CG_AllocLocalEntity();<BR>&nbsp;&nbsp;&nbsp;&nbsp; re = 
      &amp;le-&gt;refEntity;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; le-&gt;leType = 
      LE_FADE_RGB;<BR>&nbsp;&nbsp;&nbsp;&nbsp; le-&gt;startTime = 
      cg.time;<BR>&nbsp;&nbsp;&nbsp;&nbsp; le-&gt;endTime = cg.time + 
      750;<BR>&nbsp;&nbsp;&nbsp;&nbsp; le-&gt;lifeRate = 1.0 / (le-&gt;endTime - 
      le-&gt;startTime);<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; re-&gt;shaderTime = 
      cg.time / 1000.0f;<BR>&nbsp;&nbsp;&nbsp;&nbsp; re-&gt;reType = 
      RT_RAIL_CORE;<BR>&nbsp;&nbsp;&nbsp;&nbsp; re-&gt;customShader = 
      cgs.media.railCoreShader;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      VectorCopy(start, re-&gt;origin);<BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      VectorCopy(end, re-&gt;oldorigin);<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;color[0] = ci-&gt;color[0] * 0.75;<BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;color[1] = ci-&gt;color[1] * 0.75;<BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;color[2] = ci-&gt;color[2] * 0.75;<BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;color[3] = 1.0f;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; AxisClear( 
      re-&gt;axis );<BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT color=#009933>//***** End 
      core *****</FONT><BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT 
      color=#009933>//move it a little forward...<BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      <FONT color=#000000>VectorMA(move, 20, vec, 
      move);</FONT></FONT><BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT 
      color=#009933>//Copy so it can be 
      re-used.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp; VectorCopy(move, 
      next_move);<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT 
      color=#009933>//Transform vec so it represents a vector of length 
      SPACING.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//This represents the line 
      segments along the rail line.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      VectorScale (vec, SPACING, 
      vec);<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT color=#009933>//Indicator 
      to let us know when to skip a dot.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp; skip 
      = -1;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp; <FONT color=#009933>//We draw the 
      spiral skipping every other dot. Then we come back 
      and<BR>&nbsp;&nbsp;&nbsp;&nbsp; //fill in the gaps. That way, if we run 
      out of temp entities, only<BR>&nbsp;&nbsp;&nbsp;&nbsp; //every other dot 
      will be "stolen" and we will have some remnant of 
      a<BR>&nbsp;&nbsp;&nbsp;&nbsp; //spiral left. Also, if we know the length 
      is too long (over 2200),<BR>&nbsp;&nbsp;&nbsp;&nbsp; //then we dont bother 
      to come back to fill in gaps, since there 
      won't<BR>&nbsp;&nbsp;&nbsp;&nbsp; //be enough temp entities left 
      anyways.</FONT><BR></FONT><FONT face=Fixedsys>&nbsp;&nbsp;&nbsp;&nbsp; 
      <FONT color=#0000ff>for</FONT> (k = (len &gt; 2200); k &lt; 2; 
      k++)<BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT 
      color=#009933>//Start at 180 
      degrees</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j 
      = 18;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT 
      color=#0000ff>for</FONT> (i = 0; i &lt; len; i += 
      SPACING)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <FONT color=#0000ff>if</FONT> (i != 
      skip)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      skip = i + 
      SPACING;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le = 
      CG_AllocLocalEntity();<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;re 
      = 
      &amp;le-&gt;refEntity;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;leFlags = 
      LEF_PUFF_DONT_SCALE;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;leType = 
      LE_MOVE_SCALE_FADE;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT 
      color=#009933>//Lifetime is hardcoded to prevent 
      obscene<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      //numbers from potentially causing 
      problems.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;startTime = 
      cg.time;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;endTime = cg.time + 
      1200;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;lifeRate = 1.0 / (le-&gt;endTime - 
      le-&gt;startTime);<BR></FONT><FONT 
      face=Fixedsys><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      re-&gt;shaderTime = cg.time / 
      1000.0f;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      re-&gt;reType = 
      RT_SPRITE;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      re-&gt;radius = 
      1.5;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      re-&gt;customShader = cgs.media.waterBubbleShader;<BR></FONT><FONT 
      face=Fixedsys><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      re-&gt;shaderRGBA[0] = ci-&gt;color[0] * 
      255;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      re-&gt;shaderRGBA[1] = ci-&gt;color[1] * 
      255;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      re-&gt;shaderRGBA[2] = ci-&gt;color[2] * 
      255;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      re-&gt;shaderRGBA[3] = 
      255;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;color[0] = ci-&gt;color[0] * 
      0.75;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;color[1] = ci-&gt;color[1] * 
      0.75;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;color[2] = ci-&gt;color[2] * 
      0.75;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;le-&gt;color[3] 
      = 
      1.0f;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;pos.trType = 
      TR_LINEAR;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;pos.trTime = 
      cg.time;<BR></FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT 
      color=#009933 face=Fixedsys>//Copy the current position into temp 
      storage.</FONT> <FONT 
      face=Fixedsys><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      VectorCopy( move, 
      move2);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT 
      color=#009933>//Project the position along the line outwards at the proper 
      angle.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      VectorMA(move2, RADIUS , axis[j], 
      move2);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT 
      color=#009933>//Assign position to temp local 
      entity.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      VectorCopy(move2, 
      le-&gt;pos.trBase);<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT 
      color=#009933>//Set drift speed and direction of the 
      dot.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;le-&gt;pos.trDelta[0] 
      = 
      axis[j][0]*6;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;pos.trDelta[1] = 
      axis[j][1]*6;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      le-&gt;pos.trDelta[2] = 
      axis[j][2]*6;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT 
      color=#009933>//Step forward along the rail line in increment of 
      vec.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VectorAdd 
      (move, vec, 
      move);<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT 
      color=#009933>//Continue to loop through the array as we draw the 
      spiral<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//returning 
      to the first array element, round and 
      round.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      j = j + ROTATION &lt; 36 ? j + ROTATION : (j + ROTATION) % 
      36;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      &nbsp;}<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT 
      color=#009933>//Return to beginning of rail 
      line.</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VectorCopy(next_move, 
      move);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; skip = 
      0;<BR>&nbsp;&nbsp;&nbsp;&nbsp; }<BR></FONT><FONT 
      face=Fixedsys><BR>}&nbsp;&nbsp;<FONT color=#009933>//End 
      function</FONT></FONT></P>
      <P>&nbsp;</P>
      <P><FONT color=#000000 face="Arial, Helvetica, sans-serif" size=2>You must 
      also declare this new function. &nbsp;Add the following to 
      <B>cg_local.h</B>.</FONT></P>
      <P><FONT color=#0000ff face=Fixedsys>void</FONT><FONT face=Fixedsys> 
      CG_SpiralTrail (clientInfo_t *ci, vec3_t start, vec3_t end);</FONT></P>
      <P>&nbsp;</P>
      <P><FONT color=#000000 face="Arial, Helvetica, sans-serif" size=2>To use 
      the function, seach the client project for calls to <FONT 
      face=Fixedsys>CG_RailTrail</FONT> and replace it with</FONT> <FONT 
      face=Fixedsys>CG_SpiralTrail</FONT>.</P>
      <P>&nbsp;</P>
      <P><FONT color=#000000 face="Arial, Helvetica, sans-serif" size=2>If you 
      should have any ideas on how to improve this function please <A 
      href="mailto:q3coliseum@hotmail.com">e-mail</A> me. </FONT></P>
      <P> </P></TD></TR></TBODY></TABLE></BODY></HTML>
