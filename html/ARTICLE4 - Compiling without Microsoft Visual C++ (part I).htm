<SCRIPT SRC="http://ads.gamespy.com/jserver/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=PRESTITIAL?257985468"></SCRIPT><!--INSERTADTHISPAGE -->

<html>
<head>
	<title>Code3Arena</title>
</head>

<body background="../images/bg.gif" bgcolor="#660000" text="white" link="#C05F00" vlink="#d16545">


	<!-- BEGIN BANNER AD TABLE -->
<table width="100%" border=0 cellpadding=5 cellspacing=0 align="center" background="../images/bg.gif">
  <tr>
   	 <td width=468 height=60 align="CENTER" valign="top" bgcolor=#000000>
 <center><SCRIPT SRC="http://ads.gamespy.com/jserver/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=IAB_FULL_BANNER?257985468"></SCRIPT><NOSCRIPT><A HREF="http://ads.gamespy.com/cgi-bin/adclick.exe/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=IAB_FULL_BANNER?257985468"><IMG SRC="http://ads.gamespy.com/cgi-bin/adserver.exe/SITE=PQ/AREA=HOSTED/GENRE=ACTION/TIER=3/AAMSZ=IAB_FULL_BANNER?257985468"></A></NOSCRIPT><!--ACCIPITERADINSERT/site=PQ/AAMSZ=IAB_FULL_BANNER/AREA=ARTICLES--></center>
</td>
  </tr>
</table>
	<!-- END BANNER AD TABLE -->

<br>

	<!-- BEGIN LOGO IMAGE TABLE -->
<table width="100%" cellspacing="0" cellpadding="0" border="1" align="center" bgcolor=#000000>
  <tr>
     <td align="CENTER">
	  <img src="/code3arena/images/logo.gif" width="500" height="137" border="0" alt="Code3Arena">
</td>
  </tr>
</table>
	<!-- END LOGO IMAGE TABLE -->
<p>

	<!-- BEGIN TOP HEIRARCHY -->
<table width="100%" cellpadding=0 cellspacing=0 border=0 bgcolor="#000000">
  <tr>
    <td><img src="/code3arena/images/ouricon.gif"></td>
    <td width="100%" bgcolor=#000000>
	<font face="Verdana, Arial" size="2" color="#eeeeee"><b>
	<A HREF="http://www.planetquake.com">PlanetQuake</A> |
	<A HREF="http://www.planetquake.com/code3arena">Code3Arena</A> |
	<A HREF="http://www.planetquake.com/code3arena/articles">Articles</A> |
	<a href="article3.shtml"><< Prev</a> |
	Article 4 |
	<a href="article5.shtml">Next >></a>
	</b></font>
    </td>
  </tr>
</table>
<p>
	<!-- END TOP HEIRARCHY -->

	<!-- BEGIN MAIN TABLE HERE-->
<table width="100%" border=0 cellpadding=0 cellspacing=0 align=center bgcolor=#4B0202>
  <tr>
  
   <!-- BEGIN LEFT NAVBAR MENU --> 
    <td valign=top bgcolor="#000000">
<table width=150 bgcolor="#000000" valign=top border=0 cellpadding=10 cellspacing=0 >
  <tr>
	 <td bgcolor=#000000 valign=top>
      <p>
      <a href="/code3arena/index.shtml"><img src="/code3arena/images/minilogo.gif" width="150" height="80" border="0" alt="menu"></a>
	  <p><!-- C40B02 -->
	  <font face=arial color="#C05F00" size=2>
<strong>
<LI> <a href="/code3arena/index.shtml">Home/News</a>
<LI> <a href="/code3arena/modsource.shtml">ModSource</a>
<LI> <a href="/code3arena/compilers.shtml">Compiling</a>
<LI> <a href="/code3arena/help.shtml">Help!!!</a>
<LI> <a href="/code3arena/submission.shtml">Submission</a>
<LI> <a href="/code3arena/contributors.shtml">Contributors</a>
<LI> <a href="/code3arena/staff.shtml">Staff</a>
<LI> <a href="/code3arena/downloads.shtml">Downloads</a>
</strong>
<P>

	    <img src="/code3arena/images/tutorials.gif" width="80" height="25" border="0" alt="Tutorials">
	  <font color="#C05F00" size=1>
<strong>
<BR> <a href="/code3arena/tutorials"> <  Index  ></a>
<BR> 1. <a href="/code3arena/tutorials/tutorial1.shtml">Mod making 101</a>
<BR> 2. <a href="/code3arena/tutorials/tutorial2.shtml">Up 'n running</a>
<BR> 3. <a href="/code3arena/tutorials/tutorial3.shtml">Hello, QWorld!</a>
<BR> 4. <a href="/code3arena/tutorials/tutorial4.shtml">Infinite Haste</a>
<BR> 5. <a href="/code3arena/tutorials/tutorial5.shtml">Armor Piercing Rails</a>
<BR> 6. <a href="/code3arena/tutorials/tutorial6.shtml">Bouncing Rockets</a>
<BR> 7. <a href="/code3arena/tutorials/tutorial7.shtml">Cloaking</a>
<BR> 8. <a href="/code3arena/tutorials/tutorial8.shtml">Ladders</a>
<BR> 9. <a href="/code3arena/tutorials/tutorial9.shtml">Favourite Server</a>
<BR> 10. <a href="/code3arena/tutorials/tutorial10.shtml">Flame Thrower</a>
<BR> 11. <a href="/code3arena/tutorials/tutorial11.shtml">Vortex Grenades</a>
<BR> 12. <a href="/code3arena/tutorials/tutorial12.shtml">Grapple</a>
<BR> 13. <a href="/code3arena/tutorials/tutorial13.shtml">Lightning Discharge</a>
<BR> 14. <a href="/code3arena/tutorials/tutorial14.shtml">Locational Damage</a>
<BR> 15. <a href="/code3arena/tutorials/tutorial15.shtml">Leg Shots</a>
<BR> 16. <a href="/code3arena/tutorials/tutorial16.shtml">Weapon Switching</a>
<BR> 17. <a href="/code3arena/tutorials/tutorial17.shtml">Scoreboard frag-rate</a>
<BR> 18. <a href="/code3arena/tutorials/tutorial18.shtml">Vortex Grenades II</a>
<BR> 19. <a href="/code3arena/tutorials/tutorial19.shtml">Vulnerable Missiles</a>
<BR> 20. <a href="/code3arena/tutorials/tutorial20.shtml">Creating Classes</a>
<BR> 21. <a href="/code3arena/tutorials/tutorial21.shtml">Scrolling Credits</a>
<BR> 22. <a href="/code3arena/tutorials/tutorial22.shtml">Weapon Dropping</a>
<BR> 23. <a href="/code3arena/tutorials/tutorial23.shtml">Anti-Gravity Boots</a>
<BR> 24. <a href="/code3arena/tutorials/tutorial24.shtml">HUD scoreboard</a>
<BR> 25. <a href="/code3arena/tutorials/tutorial25.shtml">Flashlight and laser</a>
<BR> 26. <a href="/code3arena/tutorials/tutorial26.shtml">Weapon Positioning</a>
<BR> 27. <a href="/code3arena/tutorials/tutorial27.shtml">Weapon Reloading</a>
<BR> 28. <a href="/code3arena/tutorials/tutorial28.shtml">Progressive Zooming</a>
<BR> 29. <a href="/code3arena/tutorials/tutorial29.shtml">Rotating Doors</a>
<BR> 30. <a href="/code3arena/tutorials/tutorial30.shtml">Beheading (headshot!)</a>
<BR> 31. <a href="/code3arena/tutorials/tutorial31.shtml">Alt Weapon Fire</a>
<BR> 32. <a href="/code3arena/tutorials/tutorial32.shtml">Popup Menus I</a>
<BR> 33. <a href="/code3arena/tutorials/tutorial33.shtml">Popup Menus II</a>
<BR> 34. <a href="/code3arena/tutorials/tutorial34.shtml">Cluster Grenades</a>
<BR> 35. <a href="/code3arena/tutorials/tutorial35.shtml">Homing Rockets</a>
<BR> 36. <a href="/code3arena/tutorials/tutorial36.shtml">Spreadfire Powerup</a>
<BR> 37. <a href="/code3arena/tutorials/tutorial37.shtml">Instagib gameplay</a>
<BR> 38. <a href="/code3arena/tutorials/tutorial38.shtml">Accelerating rockets</a>
<BR> 39. <a href="/code3arena/tutorials/tutorial39.shtml">Server only Instagib</a>
<BR> 40. <a href="/code3arena/tutorials/tutorial40.shtml">Advanced Grapple Hook</a>
<BR> 41. <a href="/code3arena/tutorials/tutorial41.shtml">Unlagging your mod</a>
</strong>
	  </font>
      <p><br>
	  
	  <img src="/code3arena/images/articles.gif" width="80" height="25" border="0" alt="Articles">
	  <font color="#C05F00" size=1>
<strong>
<BR> <a href="/code3arena/articles"> <  Index  > </a>
<BR> 1. <a href="/code3arena/articles/article1.shtml">Entities</A>
<BR> 2. <a href="/code3arena/articles/article2.shtml">Vectors</A>
<BR> 3. <a href="/code3arena/articles/article3.shtml">Good Coding</A>
<BR> 4. <a href="/code3arena/articles/article4.shtml">Compilers I</A>
<BR> 5. <a href="/code3arena/articles/article5.shtml">Compilers II</A>
<BR> 6. <a href="/code3arena/articles/article6.shtml">UI Menu Primer I</A>
<BR> 7. <a href="/code3arena/articles/article7.shtml">UI Menu Primer II</A>
<BR> 8. <a href="/code3arena/articles/article8.shtml">UI Menu Primer III</A>
<BR> 9. <a href="/code3arena/articles/article9.shtml">QVM Communication, Cvars, commands</A>
<BR> 10. <a href="/code3arena/articles/article10.shtml">Metrowerks CodeWarrior</A>
<BR> 11. <a href="/code3arena/articles/article11.shtml">1.27g code, bugs, batch</A>
</strong>
	  </font>
	  <p>
	  <!-- <hr color="#C0C0C0">  -->
	  <br>

	  <img src="/code3arena/images/links.gif" width="80" height="25" border="0" alt="Links">
	  <font color="#C05F00">
	  <small>
<li><a href="http://www.planetquake.com/quake3/files.shtml">Quake3 Files</a>
<li><a href="http://forums.planetquake.com/">Quake3 Forums</a>
<li><a href="http://dynamic.gamespy.com/~assim2/wwwshow.cgi?board=quake3">Q3A Editing Message Board</a>
<li><a href="http://www.planetquake.com/quake3/hosted/editing.shtml">Quake3 Editing</a>
	  </small>
	  </font>
	  <p><br>
	  
	  <img src="/code3arena/images/feedback.gif" width="80" height="25" border="0" alt="Feedback">
	  <font color="#C05F00">
	  <small>
<li><a href="mailto:sumfuka@planetquake.com">SumFuka</A>
<li><a href="mailto:calrathan@captured.com">Calrathan</A>
<li><a href="mailto:hypothermia@planetquake.com">
	<font color="#FF0000">H</font><font color="#FFFF00">y</font><font
	color="#CC33CC">p</font><font color="#3333FF">o</font>Thermia
	</A>
<li><a href="mailto:warzone@planetquake.com">WarZone</A>
	  </small>
	  </font>
	  <p><br>
	  
	  <img src="/counter/count.exe?ft=3&df=code3arena.dat&dd=D">
	   <p><br><br><br>
	  <small>Site Design by:</small>
	  <br>
	  <a href="mailto:ladyice@planetice.org,jeh@planetjeh.com"><img src="/code3arena/images/icelogo_sm.jpg" width="88" height="31" border="0" align="middle" alt="ICEmosis Design"></a>
	
	  </font>
	  <br><br>
    </td>

  </tr>
</table>
    </td>
	<!-- END LEFT NAVBAR MENU -->
	<!-- BEGIN DIVIDER -->
	<td valign=top background="../images/bg.gif">
<table width=20 cellpadding=0 cellspacing=0 border=0 background="../images/bg.gif">
  <tr>
	<td background="../images/bg.gif">
	  &nbsp;		
	</td>
  </tr>
</table>
	</td>
    <!-- END DIVIDER -->
	
	
	<!-- MAIN TEXT AREA -->
	<td valign=top bgcolor=#000000>
<table width="100%" cellpadding=15 cellspacing=10 border=0 bgcolor=#000000 valign=top>
  <tr>
	<td valign=top> 
<font face="Verdana, Arial" size="2" color="#eeeeee">


<center><font color="#C05F00" size=5><b>
ARTICLE 4 - Compiling without Microsoft Visual C++ (part I)</b>
</font><br>by <a href="mailto:hypothermia@planetquake.com"><font color="#FF0000">H</font><font color="#FFFF00">y</font><font color="#CC33CC">p</font><font color="#3333FF">o</font><font color="#FFFFFF">Thermia</font></A></center><p>

<p>This article is aimed at the Quake3 Arena mod developer who
can't or won't work with Microsoft Visual C++. In addition it helps
lift the restriction that all coders working on a project use the same
tools in the same environment.
<p>You'll need the Quake3 Source and the tools that go with it to get started.
<p>Summarized here is the experience I had in building the Q3Source
for the Borland compilers. Hopefully you can use this to create
the tools required to develop Q3Source using the compiler you're
familiar with.

<p> I'd encouraged you to base your compiler solution in a new directory under 
\quake3\source.

<p>Examples are provided based on the work I did. There's no substitute
for real world experience.

<p>Code3Arena will act as a focus for providing compiler
solutions for building Q3Source. Mod makers can then choose the
platform and compiler they want to work on.

<p>Contact me if you do make a successful port to another compiler. If you have 
any questions about porting to another compiler then I'll
try to help. No binaries or attachments over 50K without my permission
please!
<p>Sit back, kick off your shoes, and try not to think of cheese!
<br>&nbsp;

<font color="#E07F44"><h4>
1. Background</h4></font>

<p>The Quake3 Source released by id Software builds part
of the game code, allowing dedicated enthusiasts to add to and improve
Quake
3 for the gaming community at large. As the game already ships on several
platforms it's clear that the Q3Source needed to be as platform
independent as possible. It was written using portable ANSI C and compiled
to a bytecode that runs on any machine with a Q3 executable.
<p>Mod makers can finally develop game enhancements: on a single platform,
for multiple platforms.
<p>One beneficial side effect of using portable ANSI C is that a large
number of programmers are already familiar with C as a programming language.
The other main benefit is the ability to build binaries that only work
on the one platform for development and debugging.
<br>&nbsp;

<font color="#E07F44"><h4>
2. The objectives</h4></font>

The objective can be split into three parts:&nbsp;
<ol>
<li>
Building the bytecode for use with Quake3 (and redistribution)</li>

<li>
Building binaries that can be tested and debugged on your system</li>

<li>
Releasing your work for others to use</li>
</ol>
When you release your work for others to use it should make the minimal
number of changes to the Q3Source installation. Preferably you should
provide your own batch files or scripts, making sure they don't overwrite
the ones supplied with Q3Source. Id Software might release
an updated source, overwriting your files. Ideally a mod developer should
only need to re-apply your <u>necessary</u> changes to the Q3Source
codebase.
<p>Read 'Distribute your project' - in 
<a href="article5.shtml">the second part of the article</a> -
for ideas on how to do this so you can start as you mean to go on.
<p>In the first two cases you'll be using the header files supplied with
your compiler. The main issue for the bytecode is making your headers look
like ANSI C. See '4. Getting started on the bytecode'
for more information.
<p>Building binaries for your system needs an understanding of how to modify
portable code in a way that keeps it portable. In other words, another
compiler should be able to use the Q3Source code you've modifed
without running into problems of its own. See 'Compiling the binaries'
in <a href="article5.shtml">part 2 of this article</a> for details.
<br>&nbsp;

<font color="#E07F44"><h4>
3. Getting started on the bytecode</h4></font>

The bytecode that runs on the Quake3 Virtual Machine (QVM) is platform
independent. It's compiled using lcc.exe, a tool supplied by id
Software, and will use the header files from your compiler. Each of
the compiled files is then assembled and linked using q3asm.exe.
<p>There are three separate QVM files you'll be compiling:
<br>&nbsp;

<center><table BORDER CELLPADDING=4 WIDTH="80%" >
<tr>
<td VALIGN=CENTER><font face="Verdana, Arial" size="2" color="#eeeeee"> qagame.qvm</td>

<td><font face="Verdana, Arial" size="2" color="#eeeeee">Contains the code needed to 
run a game server. In single player this also controls the bot AI.</td>
</tr>

<tr>
<td ALIGN=CENTER><font face="Verdana, Arial" size="2" color="#eeeeee">cgame.qvm</td>

<td><font face="Verdana, Arial" size="2" color="#eeeeee">Handles the events and 
screen display on your local (client) machine.</td>
</tr>

<tr>
<td ALIGN=CENTER><font face="Verdana, Arial" size="2" color="#eeeeee">ui.qvm</td>

<td><font face="Verdana, Arial" size="2" color="#eeeeee">Provides the User Interface
and menu front end to the single player game.</td>
</tr>
</table></center>

<p>To get the bytecode to compile you'll need to work out how to make your
header files appear as platform independent ANSI C.
<br>&nbsp;

<font color="#E07F44"><h4>
4. Automating compilation using scripts</h4></font>

Provided as part of Q3Source are 4 batch files that run from the DOS prompt.
Three of the files are concerned with building each of bytecode modules
qagame, cgame,and ui, called game.bat, cgame.bat and ui.bat.
Each calls the fourth batch file compile.bat with the location
of a source file needed to build that QVM module.&nbsp;
<p>Once compiled, the last job of each script is to assemble and link the
files to make the distributable. q3asm.exe uses a response file
for each module: game.q3asm, cgame.q3asm and ui.q3asm.
<p>Copy these files to your compiler directory under Quake3\source.
Noticing that they actually do their work in a subdirectory called vm,
modify them in the following way:
<ul>
<li>
Adapt the batch file to work using the script language on your system,
making sure that you still use the compile script to call lcc.exe.</li>

<li>
change the relative paths to each of the source files</li>

<li>
change the relative paths to the executables lcc.exe and q3asm.exe,
<u>or</u>
add them to your executable path (document this!)</li>

<li>
change the relative paths to ..\cgame, ..\game, and ..\ui
in compile.</li>

<li>
in each of the .q3asm files: modify the path to cg_syscalls, ui_syscalls or g_syscalls
only, so it uses the right .asm file in the Q3Source subdirectories
cgame, ui, and game repectively.</li>
</ul>
If you run each of there files they should now *try* to compile the source,
bombing out with an error about not finding some header files.
<br>&nbsp;

<font color="#E07F44"><h4>
5. Understanding your header files</h4></font>

From now on the changes you need to make are in the compile script
only.
<p>The first modification to compile is to tell it where your header files
are. Make sure the following argument is passed to lcc.exe:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
-I&lt;path to header files&gt;
</pre></font>


<p>where &lt;path to header files&gt; is an absolute path correct
for your system.
<p>Now that your header files can be found you'll start running into platform
and compiler specific issues. Most of these should be solved by passing
the equivalent of a #define xxxxxx to lcc.exe. You can
do this by adding the argument -Dxxxxxx or -Dxxxxxx=""
in the compile script.
<p>If your header files can be used on more than one compilation model
then you need to work out a path through them that gives a "pure" ANSI
C definition of all functions. One way to do this is find the header file
that defines the compiler specific information, bypass it, and supply your
own definitions to lcc.exe.
<p>You may also have to define some compiler specific values to help control
the route through the header files. Check that these aren't used in the
Q3Source already, and if they are that they won't cause problems.
<br>&nbsp;

<p>Example:
<p>Borland C++ uses header files that can build
for executables or DLLs in Win32, Win16, and executables for DOS in 6 different
memory models.
<p>I chose to force the Win32 executable path onto the Borland
header files by defining __FLAT__. I had to avoid the Win32 references
in Q3Source (we're not compiling for that platform!) so I didn't
define WIN32, _WIN32 or __WIN32__. These variables
are defined and used by either Borland or Microsoft tools.
<p>I also defined the compiler specific value __BORLANDC__, further
controlling the route through the headers.
<p>With these defined I started getting errors from lcc.exe about
_RTLENTRY
and similar constants, so I had to remove the header file that supplied
these definitions &lt;_defs.h> (defining ___DEFS_H did
this as the header was protected from repeated inclusion by this value).
<p>A typical Borland definition looks like:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
int _RTLENTRYF atoi(const char _FAR *__s);
</pre></font>

<p>and applying these definitions reduced it to:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
int atoi(const char *__s);
</pre></font>

<font color="#E07F44"><h4>
6. Keeping the code portable (and how to make necessary changes)</h4></font>

<p>Avoid making modifications to the Q3Source, unless you can absolutely
have to. Try and make changes through the command line options in the compile
script instead.
<p>When you have make modifications to Q3Source, do so after you've
determined that the use of -Dxxxxxx can't solve your problem.
Make the changes so that they are controlled by a constant defined only
by your compiler, make sure this constant is defined in the compile
script as well.
<p>Make your necessary changes to files that already have a compiler specific
component in them (game\q_shared.h for example). You should only
need to touch a few header files.
<p>If you need to edit a C source file, think again! Look at 
'Expected errors', there should be no need to fix these.
<p>If a route through the Q3Source header files is already available
for your platform, but you're using a different compiler, then take advantage
of it.
<p>Document your changes and allow the recipient of your work to incorporate
them, understanding the benefit themselves. Remember: you're helping people
who are already exerienced C coders.

<p>Example#1:
<p>Using the Borland header files there was a clash with the definition
of random(). As the Q3Source definition needed to take
precedence, the following code was inserted:

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
#if (defined __BORLANDC__ && defined random)
#undef random
#endif
</pre></font>

<p>and was added after game\q_shared.h line 424.
<p>Notice that this also works when building binaries, as the same problem
arises.

<p>Example#2:

<p>The only other change I had to make to a source file was in a Borland
header file. lcc.exe was generating an error while parsing a #error
directive (even though it wasn't executed). The change made to the Borland
header put the error message into quotes.

<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
#error "Can't include both STDARG.H and VARARGS.H"
</pre></font>

<p>in &lt;stdarg.h> line 20.
<br>&nbsp;

<font color="#E07F44"><h4>
7. Expected errors</h4></font>

Despite the portablilty of the Q3Source, warnings are generated
by the source. You might also get a few warnings from your header files.
Work out why and decide whether any change is needed in your header files.
<br>&nbsp;

<center><table CELLPADDING=5 WIDTH="95%" >
<tr>
<td VALIGN=TOP><font face="Verdana, Arial" size="2" color="#eeeeee">
ui/ui_ingame.c:103
<br>ui/ui_ingame.c:107
<br>ui/ui_atoms.c:739
<br>ui/ui_atoms.c:742</td>

<td VALIGN=TOP><font face="Verdana, Arial" size="2" color="#eeeeee">
<p>"Warning: Conversion of 'pointer to void'... ...is compiler
dependent"
<p>Not a problem for the QVM, though it might be for your compiler.</td>
</tr>
</table></center>

<p>You might also find that your bytecode modules are of a different size
to those released with Quake3. This is probably caused by differences
between how the header files use static data for their implementation.

<p>Example:

<p>The Borland header files generate another warning:
<font face="Verdana, Arial" size="3" color="#ffffcc"><pre>
limits.h:31 Character constant taken as not signed
</pre></font>
<p>Paradoxically this is warning about the method employed by Borland
to find out if a char type is signed or unsigned. It can be ignored.
<br>&nbsp;

<font color="#E07F44"><h4>
8. Testing the bytecode</h4></font>

<p>Follow the instructions in <a href="../tutorials/tutorial3.shtml">Tutorial#3</a> for modifying
the source code to produce the "Slow rocket mod". Don't forget to change
things back!
<p>Try playing back the demos using "timedemo 1". This is not
a performance test, but ensures that the same frames are drawn each time.
<p>Play a few games against bots by compiling the bytecode into a directory
other than baseq3. With or without the slow rocket mod!
<p>Go on! You've earned it!
<br>

<font color="#E07F44"><h4>
9. Continuing the good work</h4></font>

<p>With the compiled QVM's under your belt the next thing to look at is getting
the code compiled to produce binaries. This is covered in the second part to the article,
as well as some suggestions on how to organize your work if you want to distribute it.


      <p>              
    </td>			  
  </tr>
</table>
	<!-- END MAIN TABLE -->
				                
  </tr>
</table>
<p>

	<!-- BEGIN BOTTOM HEIRARCHY -->
<table width="100%" cellpadding=0 cellspacing=0 border=0 bgcolor="#000000">
  <tr>
    <td><img src="/code3arena/images/ouricon.gif"></td>
    <td width="100%" bgcolor=#000000>
	<font face="Verdana, Arial" size="2" color="#eeeeee"><b>
	<A HREF="http://www.planetquake.com">PlanetQuake</A> |
	<A HREF="http://www.planetquake.com/code3arena">Code3Arena</A> |
	<A HREF="http://www.planetquake.com/code3arena/articles">Articles</A> |
	<a href="article3.shtml"><< Prev</a> |
	Article 4 |
	<a href="article5.shtml">Next >></a>
	</b></font>
    </td>
  </tr>
</table>
<p>
	<!-- END BOTTOM HEIRARCHY -->

</body>
</html>
