Index: code/game/g_cmds.c
===================================================================
--- code/game/g_cmds.c	(revision 341)
+++ code/game/g_cmds.c	(revision 345)
@@ -523,6 +523,7 @@
 	spectatorState_t	specState;
 	int					specClient;
 	int					teamLeader;
+	int					i;
 
 	//
 	// see what change is requested
@@ -549,6 +550,18 @@
 	} else if ( !Q_stricmp( s, "hide" ) || !Q_stricmp( s, "h" ) ) {
 		team = TEAM_SPECTATOR;
 		specState = SPECTATOR_LOCAL_HIDE;
+
+		// check if client has any splitscreen clients.
+		for ( i = 0; i < MAX_SPLITVIEW-1; i++ ) {
+			if ( ent->r.localClientNums[i] != -1 ) {
+				break;
+			}
+		}
+
+		// Don't allow hiding viewport / fake disconnect if there are no splitscreen players.
+		if ( i == MAX_SPLITVIEW-1 ) {
+			return;
+		}
 	} else if ( g_gametype.integer >= GT_TEAM ) {
 		// if running a team game, assign player to one of the teams
 		specState = SPECTATOR_NOT;
@@ -608,6 +621,12 @@
 	// execute the team change
 	//
 
+	// main client in splitscreen allow to fake drop out, as it currently not possible to drop main and keep splitscreen players
+	if ( ent->client->pers.connected == CON_CONNECTED && specState == SPECTATOR_LOCAL_HIDE ) {
+		ClientDisconnect( clientNum );
+		ent->client->pers.connected = CON_CONNECTED;
+	}
+
 	// if the player was dead leave the body
 	if ( client->ps.stats[STAT_HEALTH] <= 0 ) {
 		CopyToBodyQue(ent);
@@ -615,7 +634,7 @@
 
 	// he starts at 'base'
 	client->pers.teamState.state = TEAM_BEGIN;
-	if ( oldTeam != TEAM_SPECTATOR ) {
+	if ( oldTeam != TEAM_SPECTATOR && specState != SPECTATOR_LOCAL_HIDE ) {
 		// Kill him (makes sure he loses flags, etc)
 		ent->flags &= ~FL_GODMODE;
 		ent->client->ps.stats[STAT_HEALTH] = ent->health = 0;
Index: code/cgame/cg_event.c
===================================================================
--- code/cgame/cg_event.c	(revision 341)
+++ code/cgame/cg_event.c	(revision 345)
@@ -1117,6 +1117,7 @@
 
 			// ZTM: NOTE: Some of these sounds don't really work with local clients on different teams.
 			//     New games might want to replace you/enemy sounds with red/blue.
+			//     See http://code.google.com/p/ioq3ztm/wiki/NewSounds
 
 			switch( es->eventParm ) {
 				case GTS_RED_CAPTURE: // CTF: red team captured the blue flag, 1FCTF: red team captured the neutral flag
@@ -1169,6 +1170,8 @@
 #endif
  							CG_AddBufferedSound( cgs.media.yourTeamTookEnemyFlagSound );
 						}
+					} else {
+						// ZTM: NOTE: There are local players on both teams, so have no correct sound to play. New games should fix this.
 					}
 					break;
 				case GTS_BLUE_TAKEN: // CTF: blue team took the red flag, 1FCTF red team took the neutral flag
@@ -1192,16 +1195,19 @@
 #endif
 							CG_AddBufferedSound( cgs.media.yourTeamTookEnemyFlagSound );
 						}
+					} else {
+						// ZTM: NOTE: There are local players on both teams, so have no correct sound to play. New games should fix this.
 					}
 					break;
 #ifdef MISSIONPACK
+				// ZTM: NOTE: These are confusing when there are players on both teams (players don't know which base is attacked). New games should fix this.
 				case GTS_REDOBELISK_ATTACKED: // Overload: red obelisk is being attacked
-					if (redTeam && !blueTeam) {
+					if (redTeam) {
 						CG_AddBufferedSound( cgs.media.yourBaseIsUnderAttackSound );
 					}
 					break;
 				case GTS_BLUEOBELISK_ATTACKED: // Overload: blue obelisk is being attacked
-					if (blueTeam && !redTeam) {
+					if (blueTeam) {
 						CG_AddBufferedSound( cgs.media.yourBaseIsUnderAttackSound );
 					}
 					break;
